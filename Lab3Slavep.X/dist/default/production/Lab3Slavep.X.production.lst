

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 23:35:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 04/07/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     0000                     	;# 
   370     0001                     	;# 
   371     0002                     	;# 
   372     0003                     	;# 
   373     0004                     	;# 
   374     0005                     	;# 
   375     0006                     	;# 
   376     0007                     	;# 
   377     0008                     	;# 
   378     0009                     	;# 
   379     000A                     	;# 
   380     000B                     	;# 
   381     000C                     	;# 
   382     000D                     	;# 
   383     000E                     	;# 
   384     000E                     	;# 
   385     000F                     	;# 
   386     0010                     	;# 
   387     0011                     	;# 
   388     0012                     	;# 
   389     0013                     	;# 
   390     0014                     	;# 
   391     0015                     	;# 
   392     0015                     	;# 
   393     0016                     	;# 
   394     0017                     	;# 
   395     0018                     	;# 
   396     0019                     	;# 
   397     001A                     	;# 
   398     001B                     	;# 
   399     001B                     	;# 
   400     001C                     	;# 
   401     001D                     	;# 
   402     001E                     	;# 
   403     001F                     	;# 
   404     0081                     	;# 
   405     0085                     	;# 
   406     0086                     	;# 
   407     0087                     	;# 
   408     0088                     	;# 
   409     0089                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     008E                     	;# 
   413     008F                     	;# 
   414     0090                     	;# 
   415     0091                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0094                     	;# 
   421     0095                     	;# 
   422     0096                     	;# 
   423     0097                     	;# 
   424     0098                     	;# 
   425     0099                     	;# 
   426     009A                     	;# 
   427     009B                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     009F                     	;# 
   432     0105                     	;# 
   433     0107                     	;# 
   434     0108                     	;# 
   435     0109                     	;# 
   436     010C                     	;# 
   437     010C                     	;# 
   438     010D                     	;# 
   439     010E                     	;# 
   440     010F                     	;# 
   441     0185                     	;# 
   442     0187                     	;# 
   443     0188                     	;# 
   444     0189                     	;# 
   445     018C                     	;# 
   446     018D                     	;# 
   447     0005                     _PORTA	set	5
   448     001E                     _ADRESH	set	30
   449     001F                     _ADCON0bits	set	31
   450     0013                     _SSPBUF	set	19
   451     0014                     _SSPCON	set	20
   452     0005                     _PORTAbits	set	5
   453     000C                     _PIR1bits	set	12
   454     000B                     _INTCONbits	set	11
   455     0006                     _PORTB	set	6
   456     0008                     _PORTD	set	8
   457     0066                     _ADIF	set	102
   458     0063                     _SSPIF	set	99
   459     009F                     _ADCON1bits	set	159
   460     0085                     _TRISA	set	133
   461     0094                     _SSPSTATbits	set	148
   462     0094                     _SSPSTAT	set	148
   463     0085                     _TRISAbits	set	133
   464     008C                     _PIE1bits	set	140
   465     0088                     _TRISD	set	136
   466     0086                     _TRISB	set	134
   467     043B                     _TRISC3	set	1083
   468     043D                     _TRISC5	set	1085
   469     0189                     _ANSELH	set	393
   470     0188                     _ANSEL	set	392
   471                           
   472                           	psect	cinit
   473     000F                     start_initialization:	
   474                           ; #config settings
   475                           
   476     000F                     __initialization:
   477                           
   478                           ; Clear objects allocated to COMMON
   479     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   480     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   481     0011                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484     0011                     __end_of__initialization:
   485     0011  0183               	clrf	3
   486     0012  120A  118A  285D   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMMON
   489     0079                     __pbssCOMMON:
   490     0079                     _temporal:
   491     0079                     	ds	1
   492     007A                     _valADC:
   493     007A                     	ds	1
   494                           
   495                           	psect	cstackCOMMON
   496     0070                     __pcstackCOMMON:
   497     0070                     ?_spiRead:
   498     0070                     ??_spiRead:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_spiWrite:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ??_spiWrite:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_setup:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_ADC_config:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_isr:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_spiReceiveWait:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_spiReceiveWait:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     spiWrite@dat:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 1 bytes @ 0x0
   530     0070                     	ds	1
   531     0071                     ??_isr:
   532                           
   533                           ; 1 bytes @ 0x1
   534     0071                     	ds	2
   535     0073                     ?_spiInit:
   536     0073                     ??_ADC_config:	
   537                           ; 1 bytes @ 0x3
   538                           
   539     0073                     spiInit@sDataSample:	
   540                           ; 1 bytes @ 0x3
   541                           
   542                           
   543                           ; 1 bytes @ 0x3
   544     0073                     	ds	1
   545     0074                     spiInit@sClockIdle:
   546     0074                     ADC_config@channel:	
   547                           ; 1 bytes @ 0x4
   548                           
   549                           
   550                           ; 1 bytes @ 0x4
   551     0074                     	ds	1
   552     0075                     ?_ADC_read:
   553     0075                     spiInit@sTransmitEdge:	
   554                           ; 2 bytes @ 0x5
   555                           
   556                           
   557                           ; 1 bytes @ 0x5
   558     0075                     	ds	1
   559     0076                     ??_spiInit:
   560     0076                     spiInit@sType:	
   561                           ; 1 bytes @ 0x6
   562                           
   563                           
   564                           ; 1 bytes @ 0x6
   565     0076                     	ds	1
   566     0077                     ??_setup:
   567     0077                     ??_ADC_read:	
   568                           ; 1 bytes @ 0x7
   569                           
   570                           
   571                           ; 1 bytes @ 0x7
   572     0077                     	ds	2
   573                           
   574                           	psect	cstackBANK0
   575     0020                     __pcstackBANK0:
   576     0020                     ADC_read@ADC:
   577                           
   578                           ; 2 bytes @ 0x0
   579     0020                     	ds	2
   580     0022                     ADC_read@channel:
   581                           
   582                           ; 1 bytes @ 0x2
   583     0022                     	ds	1
   584     0023                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x3
   587     0023                     	ds	2
   588                           
   589                           	psect	maintext
   590     005D                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 67 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B00/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       2       0       0       0
   613 ;;      Totals:         0       2       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels required when called: 5
   616 ;; This function calls:
   617 ;;		_ADC_read
   618 ;;		_setup
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624     005D                     _main:	
   625                           ;psect for function _main
   626                           
   627     005D                     l854:	
   628                           ;incstack = 0
   629                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   630                           
   631                           
   632                           ;main.c: 68:     setup();
   633     005D  120A  118A  203D  120A  118A  	fcall	_setup
   634     0062                     l51:	
   635                           ;main.c: 72:     while(1){
   636                           
   637                           
   638                           ;main.c: 73:        valADC = ADC_read(0x00000000);
   639     0062  3000               	movlw	0
   640     0063  120A  118A  207C  120A  118A  	fcall	_ADC_read
   641     0068  0875               	movf	?_ADC_read,w
   642     0069  00FA               	movwf	_valADC
   643     006A                     l856:
   644                           
   645                           ;main.c: 74:        _delay((unsigned long)((10)*(4000000/4000.0)));
   646     006A  300D               	movlw	13
   647     006B  1283               	bcf	3,5	;RP0=0, select bank0
   648     006C  1303               	bcf	3,6	;RP1=0, select bank0
   649     006D  00A4               	movwf	??_main+1
   650     006E  30FB               	movlw	251
   651     006F  00A3               	movwf	??_main
   652     0070                     u77:
   653     0070  0BA3               	decfsz	??_main,f
   654     0071  2870               	goto	u77
   655     0072  0BA4               	decfsz	??_main+1,f
   656     0073  2870               	goto	u77
   657     0074                     l858:
   658                           
   659                           ;main.c: 75:        PORTD = valADC;
   660     0074  087A               	movf	_valADC,w
   661     0075  1283               	bcf	3,5	;RP0=0, select bank0
   662     0076  1303               	bcf	3,6	;RP1=0, select bank0
   663     0077  0088               	movwf	8	;volatile
   664     0078  2862               	goto	l51
   665     0079  120A  118A  280C   	ljmp	start
   666     007C                     __end_of_main:
   667                           
   668                           	psect	text1
   669     003D                     __ptext1:	
   670 ;; *************** function _setup *****************
   671 ;; Defined at:
   672 ;;		line 83 in file "main.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, pclath, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 4
   693 ;; This function calls:
   694 ;;		_spiInit
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     003D                     _setup:	
   701                           ;psect for function _setup
   702                           
   703     003D                     l824:	
   704                           ;incstack = 0
   705                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   706                           
   707                           
   708                           ;main.c: 84:     ANSEL = 0;
   709     003D  1683               	bsf	3,5	;RP0=1, select bank3
   710     003E  1703               	bsf	3,6	;RP1=1, select bank3
   711     003F  0188               	clrf	8	;volatile
   712                           
   713                           ;main.c: 85:     ANSELH = 0;
   714     0040  0189               	clrf	9	;volatile
   715                           
   716                           ;main.c: 87:     TRISB = 0;
   717     0041  1683               	bsf	3,5	;RP0=1, select bank1
   718     0042  1303               	bcf	3,6	;RP1=0, select bank1
   719     0043  0186               	clrf	6	;volatile
   720                           
   721                           ;main.c: 88:     TRISD = 0;
   722     0044  0188               	clrf	8	;volatile
   723                           
   724                           ;main.c: 90:     PORTB = 0;
   725     0045  1283               	bcf	3,5	;RP0=0, select bank0
   726     0046  1303               	bcf	3,6	;RP1=0, select bank0
   727     0047  0186               	clrf	6	;volatile
   728                           
   729                           ;main.c: 91:     PORTD = 0;
   730     0048  0188               	clrf	8	;volatile
   731     0049                     l826:
   732                           
   733                           ;main.c: 93:     INTCONbits.GIE = 1;
   734     0049  178B               	bsf	11,7	;volatile
   735     004A                     l828:
   736                           
   737                           ;main.c: 94:     INTCONbits.PEIE = 1;
   738     004A  170B               	bsf	11,6	;volatile
   739     004B                     l830:
   740                           
   741                           ;main.c: 95:     PIR1bits.SSPIF = 0;
   742     004B  118C               	bcf	12,3	;volatile
   743     004C                     l832:
   744                           
   745                           ;main.c: 96:     PIE1bits.SSPIE = 1;
   746     004C  1683               	bsf	3,5	;RP0=1, select bank1
   747     004D  1303               	bcf	3,6	;RP1=0, select bank1
   748     004E  158C               	bsf	12,3	;volatile
   749     004F                     l834:
   750                           
   751                           ;main.c: 97:     TRISAbits.TRISA5 = 1;
   752     004F  1685               	bsf	5,5	;volatile
   753     0050                     l836:
   754                           
   755                           ;main.c: 98:     PORTAbits.RA5 = 0;
   756     0050  1283               	bcf	3,5	;RP0=0, select bank0
   757     0051  1303               	bcf	3,6	;RP1=0, select bank0
   758     0052  1285               	bcf	5,5	;volatile
   759     0053                     l838:
   760                           
   761                           ;main.c: 99:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   762     0053  01F3               	clrf	spiInit@sDataSample
   763     0054  01F4               	clrf	spiInit@sClockIdle
   764     0055  01F5               	clrf	spiInit@sTransmitEdge
   765     0056  3024               	movlw	36
   766     0057  120A  118A  20B5  120A  118A  	fcall	_spiInit
   767     005C                     l57:
   768     005C  0008               	return
   769     005D                     __end_of_setup:
   770                           
   771                           	psect	text2
   772     00B5                     __ptext2:	
   773 ;; *************** function _spiInit *****************
   774 ;; Defined at:
   775 ;;		line 13 in file "SPI.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  sType           1    wreg     enum E1292
   778 ;;  sDataSample     1    3[COMMON] enum E1300
   779 ;;  sClockIdle      1    4[COMMON] enum E1304
   780 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  sType           1    6[COMMON] enum E1292
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         3       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0
   795 ;;      Totals:         4       0       0       0       0
   796 ;;Total ram usage:        4 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 3
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_setup
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806     00B5                     _spiInit:	
   807                           ;psect for function _spiInit
   808                           
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   812                           ;spiInit@sType stored from wreg
   813     00B5  00F6               	movwf	spiInit@sType
   814     00B6                     l794:
   815                           
   816                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   817     00B6  1683               	bsf	3,5	;RP0=1, select bank1
   818     00B7  1303               	bcf	3,6	;RP1=0, select bank1
   819     00B8  1287               	bcf	7,5	;volatile
   820                           
   821                           ;SPI.c: 16:     if(sType & 0b00000100)
   822     00B9  1D76               	btfss	spiInit@sType,2
   823     00BA  28BC               	goto	u51
   824     00BB  28BD               	goto	u50
   825     00BC                     u51:
   826     00BC  28C1               	goto	l800
   827     00BD                     u50:
   828     00BD                     l796:
   829                           
   830                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   831     00BD  0875               	movf	spiInit@sTransmitEdge,w
   832     00BE  0094               	movwf	20	;volatile
   833     00BF                     l798:
   834                           
   835                           ;SPI.c: 19:         TRISC3 = 1;
   836     00BF  1587               	bsf	7,3	;volatile
   837                           
   838                           ;SPI.c: 20:     }
   839     00C0  28C5               	goto	l73
   840     00C1                     l800:
   841                           
   842                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   843     00C1  0873               	movf	spiInit@sDataSample,w
   844     00C2  0475               	iorwf	spiInit@sTransmitEdge,w
   845     00C3  0094               	movwf	20	;volatile
   846     00C4                     l802:
   847                           
   848                           ;SPI.c: 24:         TRISC3 = 0;
   849     00C4  1187               	bcf	7,3	;volatile
   850     00C5                     l73:	
   851                           ;SPI.c: 25:     }
   852                           
   853                           
   854                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   855     00C5  0876               	movf	spiInit@sType,w
   856     00C6  0474               	iorwf	spiInit@sClockIdle,w
   857     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   858     00C8  1303               	bcf	3,6	;RP1=0, select bank0
   859     00C9  0094               	movwf	20	;volatile
   860     00CA                     l74:
   861     00CA  0008               	return
   862     00CB                     __end_of_spiInit:
   863                           
   864                           	psect	text3
   865     007C                     __ptext3:	
   866 ;; *************** function _ADC_read *****************
   867 ;; Defined at:
   868 ;;		line 9 in file "ADC_read.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  channel         1    wreg     unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  channel         1    2[BANK0 ] unsigned char 
   873 ;;  ADC             2    0[BANK0 ] unsigned int 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  2    5[COMMON] unsigned int 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         2       0       0       0       0
   884 ;;      Locals:         0       3       0       0       0
   885 ;;      Temps:          2       0       0       0       0
   886 ;;      Totals:         4       3       0       0       0
   887 ;;Total ram usage:        7 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 4
   890 ;; This function calls:
   891 ;;		_ADC_config
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897     007C                     _ADC_read:	
   898                           ;psect for function _ADC_read
   899                           
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
   903                           ;ADC_read@channel stored from wreg
   904     007C  1283               	bcf	3,5	;RP0=0, select bank0
   905     007D  1303               	bcf	3,6	;RP1=0, select bank0
   906     007E  00A2               	movwf	ADC_read@channel
   907     007F                     l840:
   908                           
   909                           ;ADC_read.c: 10:     uint16_t ADC;;ADC_read.c: 11:     ADC_config (channel);
   910     007F  0822               	movf	ADC_read@channel,w
   911     0080  120A  118A  2015  120A  118A  	fcall	_ADC_config
   912     0085                     l842:
   913                           
   914                           ;ADC_read.c: 12:     ADCON0bits.GO = 1;
   915     0085  1283               	bcf	3,5	;RP0=0, select bank0
   916     0086  1303               	bcf	3,6	;RP1=0, select bank0
   917     0087  149F               	bsf	31,1	;volatile
   918     0088                     l102:	
   919                           ;ADC_read.c: 13:     while(ADCON0bits.GO == 1){;}
   920                           
   921     0088  189F               	btfsc	31,1	;volatile
   922     0089  288B               	goto	u61
   923     008A  288C               	goto	u60
   924     008B                     u61:
   925     008B  2888               	goto	l102
   926     008C                     u60:
   927     008C                     l104:
   928                           
   929                           ;ADC_read.c: 14:     ADIF = 0;
   930     008C  130C               	bcf	12,6	;volatile
   931     008D                     l844:
   932                           
   933                           ;ADC_read.c: 15:     ADC = ADRESH;
   934     008D  081E               	movf	30,w	;volatile
   935     008E  00F7               	movwf	??_ADC_read
   936     008F  01F8               	clrf	??_ADC_read+1
   937     0090  0877               	movf	??_ADC_read,w
   938     0091  00A0               	movwf	ADC_read@ADC
   939     0092  0878               	movf	??_ADC_read+1,w
   940     0093  00A1               	movwf	ADC_read@ADC+1
   941                           
   942                           ;ADC_read.c: 16:     return ADC;
   943     0094  0821               	movf	ADC_read@ADC+1,w
   944     0095  00F6               	movwf	?_ADC_read+1
   945     0096  0820               	movf	ADC_read@ADC,w
   946     0097  00F5               	movwf	?_ADC_read
   947     0098                     l105:
   948     0098  0008               	return
   949     0099                     __end_of_ADC_read:
   950                           
   951                           	psect	text4
   952     0015                     __ptext4:	
   953 ;; *************** function _ADC_config *****************
   954 ;; Defined at:
   955 ;;		line 8 in file "ADC_config.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  channel         1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  channel         1    4[COMMON] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0
   971 ;;      Temps:          1       0       0       0       0
   972 ;;      Totals:         2       0       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 3
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_ADC_read
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983     0015                     _ADC_config:	
   984                           ;psect for function _ADC_config
   985                           
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _ADC_config: [wreg+status,2+status,0]
   989                           ;ADC_config@channel stored from wreg
   990     0015  00F4               	movwf	ADC_config@channel
   991     0016                     l804:
   992                           
   993                           ;ADC_config.c: 9:     PORTA = 0;
   994     0016  1283               	bcf	3,5	;RP0=0, select bank0
   995     0017  1303               	bcf	3,6	;RP1=0, select bank0
   996     0018  0185               	clrf	5	;volatile
   997                           
   998                           ;ADC_config.c: 10:     TRISA = 0;
   999     0019  1683               	bsf	3,5	;RP0=1, select bank1
  1000     001A  1303               	bcf	3,6	;RP1=0, select bank1
  1001     001B  0185               	clrf	5	;volatile
  1002     001C                     l806:
  1003                           
  1004                           ;ADC_config.c: 11:     ANSEL = ANSEL | 0x00;
  1005     001C  1683               	bsf	3,5	;RP0=1, select bank3
  1006     001D  1703               	bsf	3,6	;RP1=1, select bank3
  1007     001E  0808               	movf	8,w	;volatile
  1008     001F  0088               	movwf	8	;volatile
  1009                           
  1010                           ;ADC_config.c: 12:     ANSEL = ANSEL | 0x01;
  1011     0020  0808               	movf	8,w	;volatile
  1012     0021  3801               	iorlw	1
  1013     0022  0088               	movwf	8	;volatile
  1014     0023                     l808:
  1015                           
  1016                           ;ADC_config.c: 13:     ADCON0bits.ADCS1 = 0;
  1017     0023  1283               	bcf	3,5	;RP0=0, select bank0
  1018     0024  1303               	bcf	3,6	;RP1=0, select bank0
  1019     0025  139F               	bcf	31,7	;volatile
  1020     0026                     l810:
  1021                           
  1022                           ;ADC_config.c: 14:     ADCON0bits.ADCS0 = 1;
  1023     0026  171F               	bsf	31,6	;volatile
  1024     0027                     l812:
  1025                           
  1026                           ;ADC_config.c: 16:     ADCON1bits.VCFG1 = 0;
  1027     0027  1683               	bsf	3,5	;RP0=1, select bank1
  1028     0028  1303               	bcf	3,6	;RP1=0, select bank1
  1029     0029  129F               	bcf	31,5	;volatile
  1030     002A                     l814:
  1031                           
  1032                           ;ADC_config.c: 17:     ADCON1bits.VCFG0 = 0;
  1033     002A  121F               	bcf	31,4	;volatile
  1034     002B                     l816:
  1035                           
  1036                           ;ADC_config.c: 19:     ADCON1bits.ADFM = 0;
  1037     002B  139F               	bcf	31,7	;volatile
  1038     002C                     l818:
  1039                           
  1040                           ;ADC_config.c: 21:     ADCON0bits.CHS = channel;
  1041     002C  0874               	movf	ADC_config@channel,w
  1042     002D  00F3               	movwf	??_ADC_config
  1043     002E  0DF3               	rlf	??_ADC_config,f
  1044     002F  0DF3               	rlf	??_ADC_config,f
  1045     0030  1283               	bcf	3,5	;RP0=0, select bank0
  1046     0031  1303               	bcf	3,6	;RP1=0, select bank0
  1047     0032  081F               	movf	31,w	;volatile
  1048     0033  0673               	xorwf	??_ADC_config,w
  1049     0034  39C3               	andlw	-61
  1050     0035  0673               	xorwf	??_ADC_config,w
  1051     0036  009F               	movwf	31	;volatile
  1052     0037                     l820:
  1053                           
  1054                           ;ADC_config.c: 23:     ADCON0bits.ADON = 1;
  1055     0037  141F               	bsf	31,0	;volatile
  1056     0038                     l822:
  1057                           
  1058                           ;ADC_config.c: 24:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1059     0038  3021               	movlw	33
  1060     0039  00F3               	movwf	??_ADC_config
  1061     003A                     u87:
  1062     003A  0BF3               	decfsz	??_ADC_config,f
  1063     003B  283A               	goto	u87
  1064     003C                     l120:
  1065     003C  0008               	return
  1066     003D                     __end_of_ADC_config:
  1067                           
  1068                           	psect	text5
  1069     0099                     __ptext5:	
  1070 ;; *************** function _isr *****************
  1071 ;; Defined at:
  1072 ;;		line 57 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          2       0       0       0       0
  1089 ;;      Totals:         2       0       0       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 2
  1093 ;; This function calls:
  1094 ;;		_spiRead
  1095 ;;		_spiWrite
  1096 ;; This function is called by:
  1097 ;;		Interrupt level 1
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101     0099                     _isr:	
  1102                           ;psect for function _isr
  1103                           
  1104     0099                     i1l776:
  1105                           
  1106                           ;main.c: 58:    if(SSPIF == 1){
  1107     0099  1283               	bcf	3,5	;RP0=0, select bank0
  1108     009A  1303               	bcf	3,6	;RP1=0, select bank0
  1109     009B  1D8C               	btfss	12,3	;volatile
  1110     009C  289E               	goto	u4_21
  1111     009D  289F               	goto	u4_20
  1112     009E                     u4_21:
  1113     009E  28AE               	goto	i1l46
  1114     009F                     u4_20:
  1115     009F                     i1l778:
  1116                           
  1117                           ;main.c: 59:        temporal = spiRead();
  1118     009F  120A  118A  20CB  120A  118A  	fcall	_spiRead
  1119     00A4  00F9               	movwf	_temporal
  1120                           
  1121                           ;main.c: 60:        spiWrite(valADC);
  1122     00A5  087A               	movf	_valADC,w
  1123     00A6  120A  118A  20DB  120A  118A  	fcall	_spiWrite
  1124     00AB                     i1l780:
  1125                           
  1126                           ;main.c: 61:        SSPIF = 0;
  1127     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1128     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1129     00AD  118C               	bcf	12,3	;volatile
  1130     00AE                     i1l46:
  1131     00AE  0872               	movf	??_isr+1,w
  1132     00AF  008A               	movwf	10
  1133     00B0  0E71               	swapf	??_isr,w
  1134     00B1  0083               	movwf	3
  1135     00B2  0EFE               	swapf	btemp,f
  1136     00B3  0E7E               	swapf	btemp,w
  1137     00B4  0009               	retfie
  1138     00B5                     __end_of_isr:
  1139                           
  1140                           	psect	intentry
  1141     0004                     __pintentry:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1144                           
  1145     0004                     interrupt_function:
  1146     007E                     saved_w	set	btemp
  1147     0004  00FE               	movwf	btemp
  1148     0005  0E03               	swapf	3,w
  1149     0006  00F1               	movwf	??_isr
  1150     0007  080A               	movf	10,w
  1151     0008  00F2               	movwf	??_isr+1
  1152     0009  120A  118A  2899   	ljmp	_isr
  1153                           
  1154                           	psect	text6
  1155     00DB                     __ptext6:	
  1156 ;; *************** function _spiWrite *****************
  1157 ;; Defined at:
  1158 ;;		line 35 in file "SPI.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  dat             1    wreg     unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  dat             1    0[COMMON] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         1       0       0       0       0
  1176 ;;Total ram usage:        1 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_isr
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185     00DB                     _spiWrite:	
  1186                           ;psect for function _spiWrite
  1187                           
  1188                           
  1189                           ;incstack = 0
  1190                           ; Regs used in _spiWrite: [wreg]
  1191                           ;spiWrite@dat stored from wreg
  1192     00DB  00F0               	movwf	spiWrite@dat
  1193     00DC                     i1l750:
  1194                           
  1195                           ;SPI.c: 35: void spiWrite(uint8_t dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1196     00DC  0870               	movf	spiWrite@dat,w
  1197     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1198     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1199     00DF  0093               	movwf	19	;volatile
  1200     00E0                     i1l83:
  1201     00E0  0008               	return
  1202     00E1                     __end_of_spiWrite:
  1203                           
  1204                           	psect	text7
  1205     00CB                     __ptext7:	
  1206 ;; *************** function _spiRead *****************
  1207 ;; Defined at:
  1208 ;;		line 48 in file "SPI.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      unsigned char 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 1
  1229 ;; This function calls:
  1230 ;;		_spiReceiveWait
  1231 ;; This function is called by:
  1232 ;;		_isr
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236     00CB                     _spiRead:	
  1237                           ;psect for function _spiRead
  1238                           
  1239     00CB                     i1l744:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1242                           
  1243                           
  1244                           ;SPI.c: 50:     spiReceiveWait();
  1245     00CB  120A  118A  20D4  120A  118A  	fcall	_spiReceiveWait
  1246     00D0                     i1l746:
  1247                           
  1248                           ;SPI.c: 51:     return(SSPBUF);
  1249     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1250     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1251     00D2  0813               	movf	19,w	;volatile
  1252     00D3                     i1l91:
  1253     00D3  0008               	return
  1254     00D4                     __end_of_spiRead:
  1255                           
  1256                           	psect	text8
  1257     00D4                     __ptext8:	
  1258 ;; *************** function _spiReceiveWait *****************
  1259 ;; Defined at:
  1260 ;;		line 30 in file "SPI.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_spiRead
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287     00D4                     _spiReceiveWait:	
  1288                           ;psect for function _spiReceiveWait
  1289                           
  1290     00D4                     i1l722:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _spiReceiveWait: []
  1293                           
  1294     00D4                     i1l77:	
  1295                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1296                           
  1297     00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1298     00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1299     00D6  1C14               	btfss	20,0	;volatile
  1300     00D7  28D9               	goto	u2_21
  1301     00D8  28DA               	goto	u2_20
  1302     00D9                     u2_21:
  1303     00D9  28D4               	goto	i1l77
  1304     00DA                     u2_20:
  1305     00DA                     i1l80:
  1306     00DA  0008               	return
  1307     00DB                     __end_of_spiReceiveWait:
  1308     007E                     btemp	set	126	;btemp
  1309     007E                     wtemp0	set	126
  1310                           
  1311                           	psect	idloc
  1312                           
  1313                           ;Config register IDLOC0 @ 0x2000
  1314                           ;	unspecified, using default values
  1315     2000                     	org	8192
  1316     2000  3FFF               	dw	16383
  1317                           
  1318                           ;Config register IDLOC1 @ 0x2001
  1319                           ;	unspecified, using default values
  1320     2001                     	org	8193
  1321     2001  3FFF               	dw	16383
  1322                           
  1323                           ;Config register IDLOC2 @ 0x2002
  1324                           ;	unspecified, using default values
  1325     2002                     	org	8194
  1326     2002  3FFF               	dw	16383
  1327                           
  1328                           ;Config register IDLOC3 @ 0x2003
  1329                           ;	unspecified, using default values
  1330     2003                     	org	8195
  1331     2003  3FFF               	dw	16383
  1332                           
  1333                           	psect	config
  1334                           
  1335                           ;Config register CONFIG1 @ 0x2007
  1336                           ;	Oscillator Selection bits
  1337                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1338                           ;	Watchdog Timer Enable bit
  1339                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1340                           ;	Power-up Timer Enable bit
  1341                           ;	PWRTE = OFF, PWRT disabled
  1342                           ;	RE3/MCLR pin function select bit
  1343                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1344                           ;	Code Protection bit
  1345                           ;	CP = OFF, Program memory code protection is disabled
  1346                           ;	Data Code Protection bit
  1347                           ;	CPD = OFF, Data memory code protection is disabled
  1348                           ;	Brown Out Reset Selection bits
  1349                           ;	BOREN = OFF, BOR disabled
  1350                           ;	Internal External Switchover bit
  1351                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1352                           ;	Fail-Safe Clock Monitor Enabled bit
  1353                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1354                           ;	Low Voltage Programming Enable bit
  1355                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1356                           ;	In-Circuit Debugger Mode bit
  1357                           ;	DEBUG = 0x1, unprogramme  1358     2007                     	org	8199
  1359     2007  20D4               	dw	8404
  1360                           
  1361                           ;Config register CONFIG2 @ 0x2008
  1362                           ;	Brown-out Reset Selection bit
  1363                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1364                           ;	Flash Program Memory Self Write Enable bits
  1365                           ;	WRT = OFF, Write protection off
  1366     2008                     	org	8200
  1367     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_read
    _setup->_spiInit
    _ADC_read->_ADC_config

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     427
                                              3 BANK0      2     2      0
                           _ADC_read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             7     5      2      67
                                              5 COMMON     4     2      2
                                              0 BANK0      3     3      0
                         _ADC_config
 ---------------------------------------------------------------------------------
 (2) _ADC_config                                           2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADC_config
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 23:35:28 2023

            _SSPSTATbits 0094                       l51 0062                       l73 00C5  
                     l57 005C                       l74 00CA                       u50 00BD  
                     u51 00BC                       u60 008C                       u61 008B  
                     u77 0070                       u87 003A                      l102 0088  
                    l120 003C                      l104 008C                      l105 0098  
                    l800 00C1                      l810 0026                      l802 00C4  
                    l820 0037                      l812 0027                      l804 0016  
                    l822 0038                      l814 002A                      l806 001C  
                    l830 004B                      l816 002B                      l808 0023  
                    l840 007F                      l832 004C                      l824 003D  
                    l818 002C                      l842 0085                      l834 004F  
                    l826 0049                      l844 008D                      l836 0050  
                    l828 004A                      l838 0053                      l854 005D  
                    l856 006A                      l794 00B6                      l858 0074  
                    l796 00BD                      l798 00BF                      _isr 0099  
                   _ADIF 0066                     ?_isr 0070                     i1l46 00AE  
                   i1l80 00DA                     i1l91 00D3                     i1l83 00E0  
                   i1l77 00D4                     u2_20 00DA                     u2_21 00D9  
                   u4_20 009F                     u4_21 009E                     _main 005D  
                   btemp 007E                     start 000C         __end_of_ADC_read 0099  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l722 00D4                    i1l750 00DC                    i1l744 00CB  
                  i1l746 00D0                    i1l780 00AB                    i1l776 0099  
                  i1l778 009F                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 003D  
                  pclath 000A          __end_of_spiInit 00CB          __end_of_spiRead 00D4  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007C                   ??_main 0023                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
           ??_ADC_config 0073                   _valADC 007A                   saved_w 007E  
       __end_of_spiWrite 00E1                ??_spiInit 0076                ?_ADC_read 0075  
              ??_spiRead 0070       __end_of_ADC_config 003D  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 005D          ADC_read@channel 0022  
             ??_ADC_read 0077                  ??_setup 0077               __pmaintext 005D  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 003D                  __ptext2 00B5                  __ptext3 007C  
                __ptext4 0015                  __ptext5 0099                  __ptext6 00DB  
                __ptext7 00CB                  __ptext8 00D4                  _spiInit 00B5  
                _spiRead 00CB     end_of_initialization 0011               ??_spiWrite 0070  
              _PORTAbits 0005                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00D4      start_initialization 000F              __end_of_isr 00B5  
      ADC_config@channel 0074   __end_of_spiReceiveWait 00DB              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
               ?_spiInit 0073                 ?_spiRead 0070                 _ADC_read 007C  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F              ADC_read@ADC 0020               _ADC_config 0015  
               _temporal 0079                 _spiWrite 00DB             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070              ?_ADC_config 0070  
