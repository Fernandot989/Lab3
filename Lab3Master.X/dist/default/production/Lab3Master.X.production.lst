

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 08 23:35:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 04/07/2022 GMT
    38                           ; 
    39                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0013                     _SSPBUF	set	19
   384     0014                     _SSPCON	set	20
   385     0007                     _PORTCbits	set	7
   386     0008                     _PORTD	set	8
   387     000B                     _INTCONbits	set	11
   388     0005                     _PORTA	set	5
   389     0006                     _PORTB	set	6
   390     0039                     _RC1	set	57
   391     0038                     _RC0	set	56
   392     003E                     _RC6	set	62
   393     003A                     _RC2	set	58
   394     0094                     _SSPSTAT	set	148
   395     0087                     _TRISC	set	135
   396     0081                     _OPTION_REGbits	set	129
   397     0095                     _WPUB	set	149
   398     0096                     _IOCB	set	150
   399     0085                     _TRISA	set	133
   400     0086                     _TRISB	set	134
   401     0094                     _SSPSTATbits	set	148
   402     0088                     _TRISD	set	136
   403     043B                     _TRISC3	set	1083
   404     043D                     _TRISC5	set	1085
   405     0189                     _ANSELH	set	393
   406     0188                     _ANSEL	set	392
   407                           
   408                           	psect	strings
   409     0003                     __pstrings:
   410     0003                     stringtab:
   411     0003                     __stringtab:
   412     0003                     stringcode:	
   413                           ;	String table - string pointers are 1 byte each
   414                           
   415     0003                     stringdir:
   416     0003  3000               	movlw	high stringdir
   417     0004  008A               	movwf	10
   418     0005  0804               	movf	4,w
   419     0006  0A84               	incf	4,f
   420     0007  0782               	addwf	2,f
   421     0008                     __stringbase:
   422     0008  3400               	retlw	0
   423     0009                     __end_of__stringtab:
   424     0009                     STR_1:
   425     0009  3453               	retlw	83	;'S'
   426     000A  3431               	retlw	49	;'1'
   427     000B  343A               	retlw	58	;':'
   428     000C  3420               	retlw	32	;' '
   429     000D  3453               	retlw	83	;'S'
   430     000E  3432               	retlw	50	;'2'
   431     000F  343A               	retlw	58	;':'
   432     0010  3420               	retlw	32	;' '
   433     0011  3453               	retlw	83	;'S'
   434     0012  3433               	retlw	51	;'3'
   435     0013  343A               	retlw	58	;':'
   436     0014  3400               	retlw	0
   437     0015                     STR_2:
   438     0015  342E               	retlw	46	;'.'
   439     0016  3400               	retlw	0
   440     0015                     
   441                           	psect	cinit
   442     07EC                     start_initialization:	
   443                           ; #config settings
   444                           
   445     07EC                     __initialization:
   446                           
   447                           ; Clear objects allocated to BANK0
   448     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   449     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   450     07EE  01CC               	clrf	__pbssBANK0& (0+127)
   451     07EF  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   452     07F0  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   453     07F1  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   454     07F2  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   455     07F3  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   456     07F4  01D2               	clrf	(__pbssBANK0+6)& (0+127)
   457     07F5  01D3               	clrf	(__pbssBANK0+7)& (0+127)
   458     07F6  01D4               	clrf	(__pbssBANK0+8)& (0+127)
   459     07F7  01D5               	clrf	(__pbssBANK0+9)& (0+127)
   460     07F8  01D6               	clrf	(__pbssBANK0+10)& (0+127)
   461     07F9  01D7               	clrf	(__pbssBANK0+11)& (0+127)
   462     07FA  01D8               	clrf	(__pbssBANK0+12)& (0+127)
   463     07FB  01D9               	clrf	(__pbssBANK0+13)& (0+127)
   464     07FC                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467     07FC                     __end_of__initialization:
   468     07FC  0183               	clrf	3
   469     07FD  120A  118A  2DD1   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	bssBANK0
   472     004C                     __pbssBANK0:
   473     004C                     _vADC:
   474     004C                     	ds	4
   475     0050                     _u:
   476     0050                     	ds	2
   477     0052                     _de:
   478     0052                     	ds	2
   479     0054                     _ce:
   480     0054                     	ds	2
   481     0056                     _cent:
   482     0056                     	ds	1
   483     0057                     _decen:
   484     0057                     	ds	1
   485     0058                     _unid:
   486     0058                     	ds	1
   487     0059                     _vaADC:
   488     0059                     	ds	1
   489                           
   490                           	psect	cstackCOMMON
   491     0070                     __pcstackCOMMON:
   492     0070                     ?_Lcd8_Init:
   493     0070                     ?_Lcd8_Clear:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_portconfi:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_Lcd8_Write_String:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_spiWrite:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ??_spiWrite:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_spiRead:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ??_spiRead:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_intachar:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ??_intachar:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_Lcd8_Write_Char:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ??_Lcd8_Write_Char:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_spiInit:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_main:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_spiReceiveWait:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ??_spiReceiveWait:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_Lcd8_Cmd:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ??_Lcd8_Cmd:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?___awdiv:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?___awmod:	
   548                           ; 2 bytes @ 0x0
   549                           
   550     0070                     ?___lwdiv:	
   551                           ; 2 bytes @ 0x0
   552                           
   553     0070                     ?___lwmod:	
   554                           ; 2 bytes @ 0x0
   555                           
   556     0070                     ?___lmul:	
   557                           ; 2 bytes @ 0x0
   558                           
   559     0070                     ?___fltol:	
   560                           ; 4 bytes @ 0x0
   561                           
   562     0070                     intachar@n:	
   563                           ; 4 bytes @ 0x0
   564                           
   565     0070                     spiInit@sDataSample:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     spiWrite@dat:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ___awdiv@divisor:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ___awmod@divisor:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0070                     ___lwdiv@divisor:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0070                     ___lwmod@divisor:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     ___lmul@multiplier:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0070                     ___fltol@f1:	
   587                           ; 4 bytes @ 0x0
   588                           
   589                           
   590                           ; 4 bytes @ 0x0
   591     0070                     	ds	1
   592     0071                     spiInit@sClockIdle:
   593     0071                     Lcd8_Write_Char@a:	
   594                           ; 1 bytes @ 0x1
   595                           
   596                           
   597                           ; 1 bytes @ 0x1
   598     0071                     	ds	1
   599     0072                     ??_Lcd8_Write_String:
   600     0072                     spiInit@sTransmitEdge:	
   601                           ; 1 bytes @ 0x2
   602                           
   603     0072                     Lcd8_Cmd@a:	
   604                           ; 1 bytes @ 0x2
   605                           
   606     0072                     ___awdiv@dividend:	
   607                           ; 1 bytes @ 0x2
   608                           
   609     0072                     ___awmod@dividend:	
   610                           ; 2 bytes @ 0x2
   611                           
   612     0072                     ___lwdiv@dividend:	
   613                           ; 2 bytes @ 0x2
   614                           
   615     0072                     ___lwmod@dividend:	
   616                           ; 2 bytes @ 0x2
   617                           
   618                           
   619                           ; 2 bytes @ 0x2
   620     0072                     	ds	1
   621     0073                     ??_Lcd8_Init:
   622     0073                     ??_Lcd8_Clear:	
   623                           ; 1 bytes @ 0x3
   624                           
   625     0073                     ?_Lcd8_Set_Cursor:	
   626                           ; 1 bytes @ 0x3
   627                           
   628     0073                     ??_spiInit:	
   629                           ; 1 bytes @ 0x3
   630                           
   631     0073                     spiInit@sType:	
   632                           ; 1 bytes @ 0x3
   633                           
   634     0073                     Lcd8_Set_Cursor@b:	
   635                           ; 1 bytes @ 0x3
   636                           
   637     0073                     Lcd8_Write_String@i:	
   638                           ; 1 bytes @ 0x3
   639                           
   640                           
   641                           ; 1 bytes @ 0x3
   642     0073                     	ds	1
   643     0074                     ??_portconfi:
   644     0074                     ??_Lcd8_Set_Cursor:	
   645                           ; 1 bytes @ 0x4
   646                           
   647     0074                     ??___awdiv:	
   648                           ; 1 bytes @ 0x4
   649                           
   650     0074                     ??___awmod:	
   651                           ; 1 bytes @ 0x4
   652                           
   653     0074                     ??___fltol:	
   654                           ; 1 bytes @ 0x4
   655                           
   656     0074                     ??___lwdiv:	
   657                           ; 1 bytes @ 0x4
   658                           
   659     0074                     ??___lwmod:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     Lcd8_Set_Cursor@a:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     Lcd8_Write_String@a:	
   666                           ; 1 bytes @ 0x4
   667                           
   668     0074                     ___lmul@multiplicand:	
   669                           ; 1 bytes @ 0x4
   670                           
   671                           
   672                           ; 4 bytes @ 0x4
   673     0074                     	ds	1
   674     0075                     Lcd8_Set_Cursor@x:
   675     0075                     ___awdiv@counter:	
   676                           ; 1 bytes @ 0x5
   677                           
   678     0075                     ___awmod@counter:	
   679                           ; 1 bytes @ 0x5
   680                           
   681     0075                     ___lwmod@counter:	
   682                           ; 1 bytes @ 0x5
   683                           
   684     0075                     ___lwdiv@quotient:	
   685                           ; 1 bytes @ 0x5
   686                           
   687                           
   688                           ; 2 bytes @ 0x5
   689     0075                     	ds	1
   690     0076                     ___awdiv@sign:
   691     0076                     ___awmod@sign:	
   692                           ; 1 bytes @ 0x6
   693                           
   694                           
   695                           ; 1 bytes @ 0x6
   696     0076                     	ds	1
   697     0077                     ___lwdiv@counter:
   698     0077                     ___awdiv@quotient:	
   699                           ; 1 bytes @ 0x7
   700                           
   701                           
   702                           ; 2 bytes @ 0x7
   703     0077                     	ds	1
   704     0078                     ??___lmul:
   705     0078                     ___fltol@sign1:	
   706                           ; 1 bytes @ 0x8
   707                           
   708                           
   709                           ; 1 bytes @ 0x8
   710     0078                     	ds	1
   711     0079                     ___fltol@exp1:
   712     0079                     ___lmul@product:	
   713                           ; 1 bytes @ 0x9
   714                           
   715                           
   716                           ; 4 bytes @ 0x9
   717     0079                     	ds	1
   718     007A                     ?_deshacer:
   719     007A                     deshacer@p:	
   720                           ; 1 bytes @ 0xA
   721                           
   722                           
   723                           ; 2 bytes @ 0xA
   724     007A                     	ds	2
   725     007C                     deshacer@nume:
   726                           
   727                           ; 2 bytes @ 0xC
   728     007C                     	ds	1
   729     007D                     ??___aldiv:
   730                           
   731                           ; 1 bytes @ 0xD
   732     007D                     	ds	1
   733                           
   734                           	psect	cstackBANK0
   735     0020                     __pcstackBANK0:
   736     0020                     ??_deshacer:
   737     0020                     ?___aldiv:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0020                     ___aldiv@divisor:	
   741                           ; 4 bytes @ 0x0
   742                           
   743                           
   744                           ; 4 bytes @ 0x0
   745     0020                     	ds	2
   746     0022                     deshacer@cente:
   747                           
   748                           ; 1 bytes @ 0x2
   749     0022                     	ds	1
   750     0023                     deshacer@uni:
   751                           
   752                           ; 1 bytes @ 0x3
   753     0023                     	ds	1
   754     0024                     deshacer@dec:
   755     0024                     ___aldiv@dividend:	
   756                           ; 1 bytes @ 0x4
   757                           
   758                           
   759                           ; 4 bytes @ 0x4
   760     0024                     	ds	4
   761     0028                     ___aldiv@counter:
   762                           
   763                           ; 1 bytes @ 0x8
   764     0028                     	ds	1
   765     0029                     ___aldiv@sign:
   766                           
   767                           ; 1 bytes @ 0x9
   768     0029                     	ds	1
   769     002A                     ___aldiv@quotient:
   770                           
   771                           ; 4 bytes @ 0xA
   772     002A                     	ds	4
   773     002E                     ?_map:
   774     002E                     map@minen:	
   775                           ; 2 bytes @ 0xE
   776                           
   777                           
   778                           ; 1 bytes @ 0xE
   779     002E                     	ds	1
   780     002F                     map@maxen:
   781                           
   782                           ; 1 bytes @ 0xF
   783     002F                     	ds	1
   784     0030                     map@minsa:
   785                           
   786                           ; 1 bytes @ 0x10
   787     0030                     	ds	1
   788     0031                     map@maxsa:
   789                           
   790                           ; 2 bytes @ 0x11
   791     0031                     	ds	2
   792     0033                     ??_map:
   793                           
   794                           ; 1 bytes @ 0x13
   795     0033                     	ds	4
   796     0037                     map@resultado:
   797                           
   798                           ; 2 bytes @ 0x17
   799     0037                     	ds	2
   800     0039                     map@v:
   801                           
   802                           ; 1 bytes @ 0x19
   803     0039                     	ds	1
   804     003A                     ?___xxtofl:
   805     003A                     ___xxtofl@val:	
   806                           ; 4 bytes @ 0x1A
   807                           
   808                           
   809                           ; 4 bytes @ 0x1A
   810     003A                     	ds	4
   811     003E                     ??___xxtofl:
   812                           
   813                           ; 1 bytes @ 0x1E
   814     003E                     	ds	4
   815     0042                     ___xxtofl@sign:
   816                           
   817                           ; 1 bytes @ 0x22
   818     0042                     	ds	1
   819     0043                     ___xxtofl@exp:
   820                           
   821                           ; 1 bytes @ 0x23
   822     0043                     	ds	1
   823     0044                     ___xxtofl@arg:
   824                           
   825                           ; 4 bytes @ 0x24
   826     0044                     	ds	4
   827     0048                     ??_main:
   828                           
   829                           ; 1 bytes @ 0x28
   830     0048                     	ds	4
   831                           
   832                           	psect	maintext
   833     05D1                     __pmaintext:	
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 45 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : B00/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       4       0       0       0
   856 ;;      Totals:         0       4       0       0       0
   857 ;;Total ram usage:        4 bytes
   858 ;; Hardware stack levels required when called: 2
   859 ;; This function calls:
   860 ;;		_Lcd8_Clear
   861 ;;		_Lcd8_Init
   862 ;;		_Lcd8_Set_Cursor
   863 ;;		_Lcd8_Write_Char
   864 ;;		_Lcd8_Write_String
   865 ;;		___fltol
   866 ;;		___xxtofl
   867 ;;		_deshacer
   868 ;;		_intachar
   869 ;;		_map
   870 ;;		_portconfi
   871 ;;		_spiRead
   872 ;;		_spiWrite
   873 ;; This function is called by:
   874 ;;		Startup code after reset
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878     05D1                     _main:	
   879                           ;psect for function _main
   880                           
   881     05D1                     l1809:	
   882                           ;incstack = 0
   883                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   884                           
   885                           
   886                           ;main.c: 46:   TRISD = 0x00;
   887     05D1  1683               	bsf	3,5	;RP0=1, select bank1
   888     05D2  1303               	bcf	3,6	;RP1=0, select bank1
   889     05D3  0188               	clrf	8	;volatile
   890     05D4                     l1811:
   891                           
   892                           ;main.c: 47:   Lcd8_Init();
   893     05D4  120A  118A  2293  120A  118A  	fcall	_Lcd8_Init
   894     05D9                     l1813:
   895                           
   896                           ;main.c: 48:   Lcd8_Clear();
   897     05D9  120A  118A  2081  120A  118A  	fcall	_Lcd8_Clear
   898     05DE                     l1815:
   899                           
   900                           ;main.c: 49:   portconfi();
   901     05DE  120A  118A  2109  120A  118A  	fcall	_portconfi
   902     05E3                     l1817:
   903                           
   904                           ;main.c: 50:   Lcd8_Set_Cursor(1,2);
   905     05E3  3002               	movlw	2
   906     05E4  00F3               	movwf	Lcd8_Set_Cursor@b
   907     05E5  3001               	movlw	1
   908     05E6  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
   909     05EB                     l1819:
   910                           
   911                           ;main.c: 51:   Lcd8_Write_String("S1: S2: S3:");
   912     05EB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   913     05EC  120A  118A  20E7  120A  118A  	fcall	_Lcd8_Write_String
   914     05F1                     l1821:
   915                           
   916                           ;main.c: 53:   {;main.c: 54:     _delay((unsigned long)((10)*(4000000/4000.0)));
   917     05F1  300D               	movlw	13
   918     05F2  1283               	bcf	3,5	;RP0=0, select bank0
   919     05F3  1303               	bcf	3,6	;RP1=0, select bank0
   920     05F4  00C9               	movwf	??_main+1
   921     05F5  30FB               	movlw	251
   922     05F6  00C8               	movwf	??_main
   923     05F7                     u1837:
   924     05F7  0BC8               	decfsz	??_main,f
   925     05F8  2DF7               	goto	u1837
   926     05F9  0BC9               	decfsz	??_main+1,f
   927     05FA  2DF7               	goto	u1837
   928     05FB                     l1823:
   929                           
   930                           ;main.c: 56:     RC2 = 0;
   931     05FB  1283               	bcf	3,5	;RP0=0, select bank0
   932     05FC  1303               	bcf	3,6	;RP1=0, select bank0
   933     05FD  1107               	bcf	7,2	;volatile
   934     05FE                     l1825:
   935                           
   936                           ;main.c: 57:     spiWrite(1);
   937     05FE  3001               	movlw	1
   938     05FF  120A  118A  206B  120A  118A  	fcall	_spiWrite
   939     0604                     l82:	
   940                           ;main.c: 58:     while(!SSPSTATbits.BF);
   941                           
   942     0604  1683               	bsf	3,5	;RP0=1, select bank1
   943     0605  1303               	bcf	3,6	;RP1=0, select bank1
   944     0606  1C14               	btfss	20,0	;volatile
   945     0607  2E09               	goto	u1811
   946     0608  2E0A               	goto	u1810
   947     0609                     u1811:
   948     0609  2E04               	goto	l82
   949     060A                     u1810:
   950     060A                     l1827:
   951                           
   952                           ;main.c: 59:     vaADC = spiRead();
   953     060A  120A  118A  2078  120A  118A  	fcall	_spiRead
   954     060F  1283               	bcf	3,5	;RP0=0, select bank0
   955     0610  1303               	bcf	3,6	;RP1=0, select bank0
   956     0611  00D9               	movwf	_vaADC
   957     0612                     l1829:
   958                           
   959                           ;main.c: 60:     RC2 = 1;
   960     0612  1507               	bsf	7,2	;volatile
   961                           
   962                           ;main.c: 62:     vADC = map(vaADC, 0, 255, 0, 500);
   963     0613  30F4               	movlw	244
   964     0614  00B1               	movwf	map@maxsa
   965     0615  3001               	movlw	1
   966     0616  00B2               	movwf	map@maxsa+1
   967     0617  01B0               	clrf	map@minsa
   968     0618  30FF               	movlw	255
   969     0619  00AF               	movwf	map@maxen
   970     061A  01AE               	clrf	map@minen
   971     061B  0859               	movf	_vaADC,w
   972     061C  120A  118A  21FC  120A  118A  	fcall	_map
   973     0621  1283               	bcf	3,5	;RP0=0, select bank0
   974     0622  1303               	bcf	3,6	;RP1=0, select bank0
   975     0623  082E               	movf	?_map,w
   976     0624  00C8               	movwf	??_main
   977     0625  082F               	movf	?_map+1,w
   978     0626  00C9               	movwf	??_main+1
   979     0627  01CA               	clrf	??_main+2
   980     0628  01CB               	clrf	??_main+3
   981     0629  084B               	movf	??_main+3,w
   982     062A  00BD               	movwf	___xxtofl@val+3
   983     062B  084A               	movf	??_main+2,w
   984     062C  00BC               	movwf	___xxtofl@val+2
   985     062D  0849               	movf	??_main+1,w
   986     062E  00BB               	movwf	___xxtofl@val+1
   987     062F  0848               	movf	??_main,w
   988     0630  00BA               	movwf	___xxtofl@val
   989     0631  3000               	movlw	0
   990     0632  120A  118A  2517  120A  118A  	fcall	___xxtofl
   991     0637  1283               	bcf	3,5	;RP0=0, select bank0
   992     0638  1303               	bcf	3,6	;RP1=0, select bank0
   993     0639  083D               	movf	?___xxtofl+3,w
   994     063A  00CF               	movwf	_vADC+3
   995     063B  083C               	movf	?___xxtofl+2,w
   996     063C  00CE               	movwf	_vADC+2
   997     063D  083B               	movf	?___xxtofl+1,w
   998     063E  00CD               	movwf	_vADC+1
   999     063F  083A               	movf	?___xxtofl,w
  1000     0640  00CC               	movwf	_vADC
  1001                           
  1002                           ;main.c: 63:     unid = intachar(deshacer(2, vADC));
  1003     0641  3002               	movlw	2
  1004     0642  00FA               	movwf	deshacer@p
  1005     0643  3000               	movlw	0
  1006     0644  00FB               	movwf	deshacer@p+1
  1007     0645  084F               	movf	_vADC+3,w
  1008     0646  00F3               	movwf	___fltol@f1+3
  1009     0647  084E               	movf	_vADC+2,w
  1010     0648  00F2               	movwf	___fltol@f1+2
  1011     0649  084D               	movf	_vADC+1,w
  1012     064A  00F1               	movwf	___fltol@f1+1
  1013     064B  084C               	movf	_vADC,w
  1014     064C  00F0               	movwf	___fltol@f1
  1015     064D  120A  118A  2404  120A  118A  	fcall	___fltol
  1016     0652  0871               	movf	?___fltol+1,w
  1017     0653  00FD               	movwf	deshacer@nume+1
  1018     0654  0870               	movf	?___fltol,w
  1019     0655  00FC               	movwf	deshacer@nume
  1020     0656  120A  118A  233E  120A  118A  	fcall	_deshacer
  1021     065B  120A  118A  2243  120A  118A  	fcall	_intachar
  1022     0660  1283               	bcf	3,5	;RP0=0, select bank0
  1023     0661  1303               	bcf	3,6	;RP1=0, select bank0
  1024     0662  00D8               	movwf	_unid
  1025                           
  1026                           ;main.c: 64:     Lcd8_Set_Cursor(2,1);
  1027     0663  01F3               	clrf	Lcd8_Set_Cursor@b
  1028     0664  0AF3               	incf	Lcd8_Set_Cursor@b,f
  1029     0665  3002               	movlw	2
  1030     0666  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1031                           
  1032                           ;main.c: 65:     Lcd8_Write_Char(unid);
  1033     066B  1283               	bcf	3,5	;RP0=0, select bank0
  1034     066C  1303               	bcf	3,6	;RP1=0, select bank0
  1035     066D  0858               	movf	_unid,w
  1036     066E  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1037                           
  1038                           ;main.c: 66:     Lcd8_Set_Cursor(2,2);
  1039     0673  3002               	movlw	2
  1040     0674  00F3               	movwf	Lcd8_Set_Cursor@b
  1041     0675  3002               	movlw	2
  1042     0676  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1043     067B                     l1831:
  1044                           
  1045                           ;main.c: 67:     Lcd8_Write_String(".");
  1046     067B  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1047     067C  120A  118A  20E7  120A  118A  	fcall	_Lcd8_Write_String
  1048     0681                     l1833:
  1049                           
  1050                           ;main.c: 68:     decen = intachar(deshacer(1, vADC));
  1051     0681  3001               	movlw	1
  1052     0682  00FA               	movwf	deshacer@p
  1053     0683  3000               	movlw	0
  1054     0684  00FB               	movwf	deshacer@p+1
  1055     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0687  084F               	movf	_vADC+3,w
  1058     0688  00F3               	movwf	___fltol@f1+3
  1059     0689  084E               	movf	_vADC+2,w
  1060     068A  00F2               	movwf	___fltol@f1+2
  1061     068B  084D               	movf	_vADC+1,w
  1062     068C  00F1               	movwf	___fltol@f1+1
  1063     068D  084C               	movf	_vADC,w
  1064     068E  00F0               	movwf	___fltol@f1
  1065     068F  120A  118A  2404  120A  118A  	fcall	___fltol
  1066     0694  0871               	movf	?___fltol+1,w
  1067     0695  00FD               	movwf	deshacer@nume+1
  1068     0696  0870               	movf	?___fltol,w
  1069     0697  00FC               	movwf	deshacer@nume
  1070     0698  120A  118A  233E  120A  118A  	fcall	_deshacer
  1071     069D  120A  118A  2243  120A  118A  	fcall	_intachar
  1072     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1073     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1074     06A4  00D7               	movwf	_decen
  1075     06A5                     l1835:
  1076                           
  1077                           ;main.c: 69:     Lcd8_Set_Cursor(2,3);
  1078     06A5  3003               	movlw	3
  1079     06A6  00F3               	movwf	Lcd8_Set_Cursor@b
  1080     06A7  3002               	movlw	2
  1081     06A8  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1082     06AD                     l1837:
  1083                           
  1084                           ;main.c: 70:     Lcd8_Write_Char(decen);
  1085     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1086     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1087     06AF  0857               	movf	_decen,w
  1088     06B0  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1089     06B5                     l1839:
  1090                           
  1091                           ;main.c: 71:     cent = intachar(deshacer(0, vADC));
  1092     06B5  3000               	movlw	0
  1093     06B6  00FA               	movwf	deshacer@p
  1094     06B7  00FB               	movwf	deshacer@p+1
  1095     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1096     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1097     06BA  084F               	movf	_vADC+3,w
  1098     06BB  00F3               	movwf	___fltol@f1+3
  1099     06BC  084E               	movf	_vADC+2,w
  1100     06BD  00F2               	movwf	___fltol@f1+2
  1101     06BE  084D               	movf	_vADC+1,w
  1102     06BF  00F1               	movwf	___fltol@f1+1
  1103     06C0  084C               	movf	_vADC,w
  1104     06C1  00F0               	movwf	___fltol@f1
  1105     06C2  120A  118A  2404  120A  118A  	fcall	___fltol
  1106     06C7  0871               	movf	?___fltol+1,w
  1107     06C8  00FD               	movwf	deshacer@nume+1
  1108     06C9  0870               	movf	?___fltol,w
  1109     06CA  00FC               	movwf	deshacer@nume
  1110     06CB  120A  118A  233E  120A  118A  	fcall	_deshacer
  1111     06D0  120A  118A  2243  120A  118A  	fcall	_intachar
  1112     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1113     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1114     06D7  00D6               	movwf	_cent
  1115     06D8                     l1841:
  1116                           
  1117                           ;main.c: 72:     Lcd8_Set_Cursor(2,4);
  1118     06D8  3004               	movlw	4
  1119     06D9  00F3               	movwf	Lcd8_Set_Cursor@b
  1120     06DA  3002               	movlw	2
  1121     06DB  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1122     06E0                     l1843:
  1123                           
  1124                           ;main.c: 73:     Lcd8_Write_Char(cent);
  1125     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1126     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1127     06E2  0856               	movf	_cent,w
  1128     06E3  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1129     06E8                     l1845:
  1130                           
  1131                           ;main.c: 74:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1132     06E8  300D               	movlw	13
  1133     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1134     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1135     06EB  00C9               	movwf	??_main+1
  1136     06EC  30FB               	movlw	251
  1137     06ED  00C8               	movwf	??_main
  1138     06EE                     u1847:
  1139     06EE  0BC8               	decfsz	??_main,f
  1140     06EF  2EEE               	goto	u1847
  1141     06F0  0BC9               	decfsz	??_main+1,f
  1142     06F1  2EEE               	goto	u1847
  1143     06F2                     l1847:
  1144                           
  1145                           ;main.c: 76:     RC6 = 0;
  1146     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1147     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1148     06F4  1307               	bcf	7,6	;volatile
  1149     06F5                     l1849:
  1150                           
  1151                           ;main.c: 77:     spiWrite(1);
  1152     06F5  3001               	movlw	1
  1153     06F6  120A  118A  206B  120A  118A  	fcall	_spiWrite
  1154     06FB                     l85:	
  1155                           ;main.c: 78:     while(!SSPSTATbits.BF);
  1156                           
  1157     06FB  1683               	bsf	3,5	;RP0=1, select bank1
  1158     06FC  1303               	bcf	3,6	;RP1=0, select bank1
  1159     06FD  1C14               	btfss	20,0	;volatile
  1160     06FE  2F00               	goto	u1821
  1161     06FF  2F01               	goto	u1820
  1162     0700                     u1821:
  1163     0700  2EFB               	goto	l85
  1164     0701                     u1820:
  1165     0701                     l1851:
  1166                           
  1167                           ;main.c: 79:     vaADC = spiRead();
  1168     0701  120A  118A  2078  120A  118A  	fcall	_spiRead
  1169     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1170     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1171     0708  00D9               	movwf	_vaADC
  1172     0709                     l1853:
  1173                           
  1174                           ;main.c: 80:     RC6 = 1;
  1175     0709  1707               	bsf	7,6	;volatile
  1176                           
  1177                           ;main.c: 82:     vADC = map(vaADC, 0, 255, 0, 500);
  1178     070A  30F4               	movlw	244
  1179     070B  00B1               	movwf	map@maxsa
  1180     070C  3001               	movlw	1
  1181     070D  00B2               	movwf	map@maxsa+1
  1182     070E  01B0               	clrf	map@minsa
  1183     070F  30FF               	movlw	255
  1184     0710  00AF               	movwf	map@maxen
  1185     0711  01AE               	clrf	map@minen
  1186     0712  0859               	movf	_vaADC,w
  1187     0713  120A  118A  21FC  120A  118A  	fcall	_map
  1188     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1189     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1190     071A  082E               	movf	?_map,w
  1191     071B  00C8               	movwf	??_main
  1192     071C  082F               	movf	?_map+1,w
  1193     071D  00C9               	movwf	??_main+1
  1194     071E  01CA               	clrf	??_main+2
  1195     071F  01CB               	clrf	??_main+3
  1196     0720  084B               	movf	??_main+3,w
  1197     0721  00BD               	movwf	___xxtofl@val+3
  1198     0722  084A               	movf	??_main+2,w
  1199     0723  00BC               	movwf	___xxtofl@val+2
  1200     0724  0849               	movf	??_main+1,w
  1201     0725  00BB               	movwf	___xxtofl@val+1
  1202     0726  0848               	movf	??_main,w
  1203     0727  00BA               	movwf	___xxtofl@val
  1204     0728  3000               	movlw	0
  1205     0729  120A  118A  2517  120A  118A  	fcall	___xxtofl
  1206     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1207     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0730  083D               	movf	?___xxtofl+3,w
  1209     0731  00CF               	movwf	_vADC+3
  1210     0732  083C               	movf	?___xxtofl+2,w
  1211     0733  00CE               	movwf	_vADC+2
  1212     0734  083B               	movf	?___xxtofl+1,w
  1213     0735  00CD               	movwf	_vADC+1
  1214     0736  083A               	movf	?___xxtofl,w
  1215     0737  00CC               	movwf	_vADC
  1216                           
  1217                           ;main.c: 83:     unid = intachar(deshacer(2, vADC));
  1218     0738  3002               	movlw	2
  1219     0739  00FA               	movwf	deshacer@p
  1220     073A  3000               	movlw	0
  1221     073B  00FB               	movwf	deshacer@p+1
  1222     073C  084F               	movf	_vADC+3,w
  1223     073D  00F3               	movwf	___fltol@f1+3
  1224     073E  084E               	movf	_vADC+2,w
  1225     073F  00F2               	movwf	___fltol@f1+2
  1226     0740  084D               	movf	_vADC+1,w
  1227     0741  00F1               	movwf	___fltol@f1+1
  1228     0742  084C               	movf	_vADC,w
  1229     0743  00F0               	movwf	___fltol@f1
  1230     0744  120A  118A  2404  120A  118A  	fcall	___fltol
  1231     0749  0871               	movf	?___fltol+1,w
  1232     074A  00FD               	movwf	deshacer@nume+1
  1233     074B  0870               	movf	?___fltol,w
  1234     074C  00FC               	movwf	deshacer@nume
  1235     074D  120A  118A  233E  120A  118A  	fcall	_deshacer
  1236     0752  120A  118A  2243  120A  118A  	fcall	_intachar
  1237     0757  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0758  1303               	bcf	3,6	;RP1=0, select bank0
  1239     0759  00D8               	movwf	_unid
  1240                           
  1241                           ;main.c: 84:     Lcd8_Set_Cursor(2,6);
  1242     075A  3006               	movlw	6
  1243     075B  00F3               	movwf	Lcd8_Set_Cursor@b
  1244     075C  3002               	movlw	2
  1245     075D  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1246                           
  1247                           ;main.c: 85:     Lcd8_Write_Char(unid);
  1248     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1249     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1250     0764  0858               	movf	_unid,w
  1251     0765  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1252                           
  1253                           ;main.c: 86:     Lcd8_Set_Cursor(2,7);
  1254     076A  3007               	movlw	7
  1255     076B  00F3               	movwf	Lcd8_Set_Cursor@b
  1256     076C  3002               	movlw	2
  1257     076D  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1258     0772                     l1855:
  1259                           
  1260                           ;main.c: 87:     Lcd8_Write_String(".");
  1261     0772  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1262     0773  120A  118A  20E7  120A  118A  	fcall	_Lcd8_Write_String
  1263     0778                     l1857:
  1264                           
  1265                           ;main.c: 88:     decen = intachar(deshacer(1, vADC));
  1266     0778  3001               	movlw	1
  1267     0779  00FA               	movwf	deshacer@p
  1268     077A  3000               	movlw	0
  1269     077B  00FB               	movwf	deshacer@p+1
  1270     077C  1283               	bcf	3,5	;RP0=0, select bank0
  1271     077D  1303               	bcf	3,6	;RP1=0, select bank0
  1272     077E  084F               	movf	_vADC+3,w
  1273     077F  00F3               	movwf	___fltol@f1+3
  1274     0780  084E               	movf	_vADC+2,w
  1275     0781  00F2               	movwf	___fltol@f1+2
  1276     0782  084D               	movf	_vADC+1,w
  1277     0783  00F1               	movwf	___fltol@f1+1
  1278     0784  084C               	movf	_vADC,w
  1279     0785  00F0               	movwf	___fltol@f1
  1280     0786  120A  118A  2404  120A  118A  	fcall	___fltol
  1281     078B  0871               	movf	?___fltol+1,w
  1282     078C  00FD               	movwf	deshacer@nume+1
  1283     078D  0870               	movf	?___fltol,w
  1284     078E  00FC               	movwf	deshacer@nume
  1285     078F  120A  118A  233E  120A  118A  	fcall	_deshacer
  1286     0794  120A  118A  2243  120A  118A  	fcall	_intachar
  1287     0799  1283               	bcf	3,5	;RP0=0, select bank0
  1288     079A  1303               	bcf	3,6	;RP1=0, select bank0
  1289     079B  00D7               	movwf	_decen
  1290     079C                     l1859:
  1291                           
  1292                           ;main.c: 89:     Lcd8_Set_Cursor(2,8);
  1293     079C  3008               	movlw	8
  1294     079D  00F3               	movwf	Lcd8_Set_Cursor@b
  1295     079E  3002               	movlw	2
  1296     079F  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1297     07A4                     l1861:
  1298                           
  1299                           ;main.c: 90:     Lcd8_Write_Char(decen);
  1300     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1301     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1302     07A6  0857               	movf	_decen,w
  1303     07A7  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1304     07AC                     l1863:
  1305                           
  1306                           ;main.c: 91:     cent = intachar(deshacer(0, vADC));
  1307     07AC  3000               	movlw	0
  1308     07AD  00FA               	movwf	deshacer@p
  1309     07AE  00FB               	movwf	deshacer@p+1
  1310     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1311     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1312     07B1  084F               	movf	_vADC+3,w
  1313     07B2  00F3               	movwf	___fltol@f1+3
  1314     07B3  084E               	movf	_vADC+2,w
  1315     07B4  00F2               	movwf	___fltol@f1+2
  1316     07B5  084D               	movf	_vADC+1,w
  1317     07B6  00F1               	movwf	___fltol@f1+1
  1318     07B7  084C               	movf	_vADC,w
  1319     07B8  00F0               	movwf	___fltol@f1
  1320     07B9  120A  118A  2404  120A  118A  	fcall	___fltol
  1321     07BE  0871               	movf	?___fltol+1,w
  1322     07BF  00FD               	movwf	deshacer@nume+1
  1323     07C0  0870               	movf	?___fltol,w
  1324     07C1  00FC               	movwf	deshacer@nume
  1325     07C2  120A  118A  233E  120A  118A  	fcall	_deshacer
  1326     07C7  120A  118A  2243  120A  118A  	fcall	_intachar
  1327     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1328     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1329     07CE  00D6               	movwf	_cent
  1330     07CF                     l1865:
  1331                           
  1332                           ;main.c: 92:     Lcd8_Set_Cursor(2,9);
  1333     07CF  3009               	movlw	9
  1334     07D0  00F3               	movwf	Lcd8_Set_Cursor@b
  1335     07D1  3002               	movlw	2
  1336     07D2  120A  118A  20C7  120A  118A  	fcall	_Lcd8_Set_Cursor
  1337     07D7                     l1867:
  1338                           
  1339                           ;main.c: 93:     Lcd8_Write_Char(cent);
  1340     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1341     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1342     07D9  0856               	movf	_cent,w
  1343     07DA  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  1344     07DF                     l1869:
  1345                           
  1346                           ;main.c: 94:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1347     07DF  300D               	movlw	13
  1348     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1349     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1350     07E2  00C9               	movwf	??_main+1
  1351     07E3  30FB               	movlw	251
  1352     07E4  00C8               	movwf	??_main
  1353     07E5                     u1857:
  1354     07E5  0BC8               	decfsz	??_main,f
  1355     07E6  2FE5               	goto	u1857
  1356     07E7  0BC9               	decfsz	??_main+1,f
  1357     07E8  2FE5               	goto	u1857
  1358     07E9                     l88:
  1359     07E9  120A  118A  2800   	ljmp	start
  1360     07EC                     __end_of_main:
  1361                           
  1362                           	psect	text1
  1363     006B                     __ptext1:	
  1364 ;; *************** function _spiWrite *****************
  1365 ;; Defined at:
  1366 ;;		line 37 in file "SPI.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  dat             1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  dat             1    0[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         1       0       0       0       0
  1384 ;;Total ram usage:        1 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393     006B                     _spiWrite:	
  1394                           ;psect for function _spiWrite
  1395                           
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in _spiWrite: [wreg]
  1399                           ;spiWrite@dat stored from wreg
  1400     006B  00F0               	movwf	spiWrite@dat
  1401     006C                     l1613:
  1402                           
  1403                           ;SPI.c: 37: void spiWrite(uint8_t dat);SPI.c: 38: {;SPI.c: 39:     SSPBUF = dat;
  1404     006C  0870               	movf	spiWrite@dat,w
  1405     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1406     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1407     006F  0093               	movwf	19	;volatile
  1408     0070                     l152:
  1409     0070  0008               	return
  1410     0071                     __end_of_spiWrite:
  1411                           
  1412                           	psect	text2
  1413     0078                     __ptext2:	
  1414 ;; *************** function _spiRead *****************
  1415 ;; Defined at:
  1416 ;;		line 50 in file "SPI.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      unsigned char 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 1
  1437 ;; This function calls:
  1438 ;;		_spiReceiveWait
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444     0078                     _spiRead:	
  1445                           ;psect for function _spiRead
  1446                           
  1447     0078                     l1615:	
  1448                           ;incstack = 0
  1449                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1450                           
  1451                           
  1452                           ;SPI.c: 52:     spiReceiveWait();
  1453     0078  120A  118A  2071  120A  118A  	fcall	_spiReceiveWait
  1454     007D                     l1617:
  1455                           
  1456                           ;SPI.c: 53:     return(SSPBUF);
  1457     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1458     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1459     007F  0813               	movf	19,w	;volatile
  1460     0080                     l160:
  1461     0080  0008               	return
  1462     0081                     __end_of_spiRead:
  1463                           
  1464                           	psect	text3
  1465     0071                     __ptext3:	
  1466 ;; *************** function _spiReceiveWait *****************
  1467 ;; Defined at:
  1468 ;;		line 32 in file "SPI.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		None
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0
  1485 ;;      Totals:         0       0       0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_spiRead
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495     0071                     _spiReceiveWait:	
  1496                           ;psect for function _spiReceiveWait
  1497                           
  1498     0071                     l1357:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _spiReceiveWait: []
  1501                           
  1502     0071                     l146:	
  1503                           ;SPI.c: 34:     while ( !SSPSTATbits.BF );
  1504                           
  1505     0071  1683               	bsf	3,5	;RP0=1, select bank1
  1506     0072  1303               	bcf	3,6	;RP1=0, select bank1
  1507     0073  1C14               	btfss	20,0	;volatile
  1508     0074  2876               	goto	u931
  1509     0075  2877               	goto	u930
  1510     0076                     u931:
  1511     0076  2871               	goto	l146
  1512     0077                     u930:
  1513     0077                     l149:
  1514     0077  0008               	return
  1515     0078                     __end_of_spiReceiveWait:
  1516                           
  1517                           	psect	text4
  1518     0109                     __ptext4:	
  1519 ;; *************** function _portconfi *****************
  1520 ;; Defined at:
  1521 ;;		line 99 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 1
  1542 ;; This function calls:
  1543 ;;		_spiInit
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549     0109                     _portconfi:	
  1550                           ;psect for function _portconfi
  1551                           
  1552     0109                     l1573:	
  1553                           ;incstack = 0
  1554                           ; Regs used in _portconfi: [wreg+status,2+status,0+pclath+cstack]
  1555                           
  1556                           
  1557                           ;main.c: 100:     ANSEL = 0;
  1558     0109  1683               	bsf	3,5	;RP0=1, select bank3
  1559     010A  1703               	bsf	3,6	;RP1=1, select bank3
  1560     010B  0188               	clrf	8	;volatile
  1561                           
  1562                           ;main.c: 101:     ANSELH = 0;
  1563     010C  0189               	clrf	9	;volatile
  1564                           
  1565                           ;main.c: 102:     TRISB = 0;
  1566     010D  1683               	bsf	3,5	;RP0=1, select bank1
  1567     010E  1303               	bcf	3,6	;RP1=0, select bank1
  1568     010F  0186               	clrf	6	;volatile
  1569                           
  1570                           ;main.c: 103:     PORTB = 0;
  1571     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1572     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1573     0112  0186               	clrf	6	;volatile
  1574                           
  1575                           ;main.c: 104:     TRISA = 0;
  1576     0113  1683               	bsf	3,5	;RP0=1, select bank1
  1577     0114  1303               	bcf	3,6	;RP1=0, select bank1
  1578     0115  0185               	clrf	5	;volatile
  1579                           
  1580                           ;main.c: 105:     PORTA = 0;
  1581     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0117  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0118  0185               	clrf	5	;volatile
  1584     0119                     l1575:
  1585                           
  1586                           ;main.c: 106:     INTCONbits.GIE = 1;
  1587     0119  178B               	bsf	11,7	;volatile
  1588     011A                     l1577:
  1589                           
  1590                           ;main.c: 107:     INTCONbits.RBIE = 1;
  1591     011A  158B               	bsf	11,3	;volatile
  1592     011B                     l1579:
  1593                           
  1594                           ;main.c: 108:     INTCONbits.RBIF = 0;
  1595     011B  100B               	bcf	11,0	;volatile
  1596     011C                     l1581:
  1597                           
  1598                           ;main.c: 109:     IOCB = 0b11000000;
  1599     011C  30C0               	movlw	192
  1600     011D  1683               	bsf	3,5	;RP0=1, select bank1
  1601     011E  1303               	bcf	3,6	;RP1=0, select bank1
  1602     011F  0096               	movwf	22	;volatile
  1603     0120                     l1583:
  1604                           
  1605                           ;main.c: 110:     WPUB = 0b11000000;
  1606     0120  30C0               	movlw	192
  1607     0121  0095               	movwf	21	;volatile
  1608     0122                     l1585:
  1609                           
  1610                           ;main.c: 111:     OPTION_REGbits.nRBPU = 0;
  1611     0122  1381               	bcf	1,7	;volatile
  1612                           
  1613                           ;main.c: 113:     TRISD = 0;
  1614     0123  0188               	clrf	8	;volatile
  1615                           
  1616                           ;main.c: 114:     PORTD = 0;
  1617     0124  1283               	bcf	3,5	;RP0=0, select bank0
  1618     0125  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0126  0188               	clrf	8	;volatile
  1620                           
  1621                           ;main.c: 115:     TRISC = 0;
  1622     0127  1683               	bsf	3,5	;RP0=1, select bank1
  1623     0128  1303               	bcf	3,6	;RP1=0, select bank1
  1624     0129  0187               	clrf	7	;volatile
  1625     012A                     l1587:
  1626                           
  1627                           ;main.c: 116:     PORTCbits.RC2 = 1;
  1628     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1629     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1630     012C  1507               	bsf	7,2	;volatile
  1631     012D                     l1589:
  1632                           
  1633                           ;main.c: 117:     PORTCbits.RC6 = 1;
  1634     012D  1707               	bsf	7,6	;volatile
  1635     012E                     l1591:
  1636                           
  1637                           ;main.c: 118:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1638     012E  01F0               	clrf	spiInit@sDataSample
  1639     012F  01F1               	clrf	spiInit@sClockIdle
  1640     0130  01F2               	clrf	spiInit@sTransmitEdge
  1641     0131  3020               	movlw	32
  1642     0132  120A  118A  20B1  120A  118A  	fcall	_spiInit
  1643     0137                     l93:
  1644     0137  0008               	return
  1645     0138                     __end_of_portconfi:
  1646                           
  1647                           	psect	text5
  1648     00B1                     __ptext5:	
  1649 ;; *************** function _spiInit *****************
  1650 ;; Defined at:
  1651 ;;		line 15 in file "SPI.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  sType           1    wreg     enum E1292
  1654 ;;  sDataSample     1    0[COMMON] enum E1300
  1655 ;;  sClockIdle      1    1[COMMON] enum E1304
  1656 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  sType           1    3[COMMON] enum E1292
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         3       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         4       0       0       0       0
  1672 ;;Total ram usage:        4 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_portconfi
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681     00B1                     _spiInit:	
  1682                           ;psect for function _spiInit
  1683                           
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1687                           ;spiInit@sType stored from wreg
  1688     00B1  00F3               	movwf	spiInit@sType
  1689     00B2                     l1347:
  1690                           
  1691                           ;SPI.c: 15: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 16: {;SPI.c: 17:     TRISC5 = 0;
  1692     00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1693     00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1694     00B4  1287               	bcf	7,5	;volatile
  1695                           
  1696                           ;SPI.c: 18:     if(sType & 0b00000100)
  1697     00B5  1D73               	btfss	spiInit@sType,2
  1698     00B6  28B8               	goto	u921
  1699     00B7  28B9               	goto	u920
  1700     00B8                     u921:
  1701     00B8  28BD               	goto	l1353
  1702     00B9                     u920:
  1703     00B9                     l1349:
  1704                           
  1705                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sTransmitEdge;
  1706     00B9  0872               	movf	spiInit@sTransmitEdge,w
  1707     00BA  0094               	movwf	20	;volatile
  1708     00BB                     l1351:
  1709                           
  1710                           ;SPI.c: 21:         TRISC3 = 1;
  1711     00BB  1587               	bsf	7,3	;volatile
  1712                           
  1713                           ;SPI.c: 22:     }
  1714     00BC  28C1               	goto	l142
  1715     00BD                     l1353:
  1716                           
  1717                           ;SPI.c: 24:     {;SPI.c: 25:         SSPSTAT = sDataSample | sTransmitEdge;
  1718     00BD  0870               	movf	spiInit@sDataSample,w
  1719     00BE  0472               	iorwf	spiInit@sTransmitEdge,w
  1720     00BF  0094               	movwf	20	;volatile
  1721     00C0                     l1355:
  1722                           
  1723                           ;SPI.c: 26:         TRISC3 = 0;
  1724     00C0  1187               	bcf	7,3	;volatile
  1725     00C1                     l142:	
  1726                           ;SPI.c: 27:     }
  1727                           
  1728                           
  1729                           ;SPI.c: 29:     SSPCON = sType | sClockIdle;
  1730     00C1  0873               	movf	spiInit@sType,w
  1731     00C2  0471               	iorwf	spiInit@sClockIdle,w
  1732     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1733     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1734     00C5  0094               	movwf	20	;volatile
  1735     00C6                     l143:
  1736     00C6  0008               	return
  1737     00C7                     __end_of_spiInit:
  1738                           
  1739                           	psect	text6
  1740     01FC                     __ptext6:	
  1741 ;; *************** function _map *****************
  1742 ;; Defined at:
  1743 ;;		line 174 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  v               1    wreg     unsigned char 
  1746 ;;  minen           1   14[BANK0 ] unsigned char 
  1747 ;;  maxen           1   15[BANK0 ] unsigned char 
  1748 ;;  minsa           1   16[BANK0 ] unsigned char 
  1749 ;;  maxsa           2   17[BANK0 ] unsigned int 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  v               1   25[BANK0 ] unsigned char 
  1752 ;;  resultado       2   23[BANK0 ] unsigned int 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2   14[BANK0 ] unsigned int 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       5       0       0       0
  1763 ;;      Locals:         0       3       0       0       0
  1764 ;;      Temps:          0       4       0       0       0
  1765 ;;      Totals:         0      12       0       0       0
  1766 ;;Total ram usage:       12 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 1
  1769 ;; This function calls:
  1770 ;;		___aldiv
  1771 ;;		___lmul
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777     01FC                     _map:	
  1778                           ;psect for function _map
  1779                           
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1783                           ;map@v stored from wreg
  1784     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1785     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1786     01FE  00B9               	movwf	map@v
  1787     01FF                     l1621:
  1788                           
  1789                           ;main.c: 175:     uint16_t resultado;;main.c: 176:     resultado = (((maxsa-minsa)* (lon
      +                          g long)(v-minen))/maxen)+minsa;
  1790     01FF  082F               	movf	map@maxen,w
  1791     0200  00B3               	movwf	??_map
  1792     0201  01B4               	clrf	??_map+1
  1793     0202  01B5               	clrf	??_map+2
  1794     0203  01B6               	clrf	??_map+3
  1795     0204  0836               	movf	??_map+3,w
  1796     0205  00A3               	movwf	___aldiv@divisor+3
  1797     0206  0835               	movf	??_map+2,w
  1798     0207  00A2               	movwf	___aldiv@divisor+2
  1799     0208  0834               	movf	??_map+1,w
  1800     0209  00A1               	movwf	___aldiv@divisor+1
  1801     020A  0833               	movf	??_map,w
  1802     020B  00A0               	movwf	___aldiv@divisor
  1803     020C  0830               	movf	map@minsa,w
  1804     020D  0231               	subwf	map@maxsa,w
  1805     020E  00F0               	movwf	___lmul@multiplier
  1806     020F  0832               	movf	map@maxsa+1,w
  1807     0210  1C03               	skipc
  1808     0211  0332               	decf	map@maxsa+1,w
  1809     0212  00F1               	movwf	___lmul@multiplier+1
  1810     0213  01F2               	clrf	___lmul@multiplier+2
  1811     0214  01F3               	clrf	___lmul@multiplier+3
  1812     0215  082E               	movf	map@minen,w
  1813     0216  0239               	subwf	map@v,w
  1814     0217  00F4               	movwf	___lmul@multiplicand
  1815     0218  01F5               	clrf	___lmul@multiplicand+1
  1816     0219  1C03               	skipc
  1817     021A  03F5               	decf	___lmul@multiplicand+1,f
  1818     021B  01F6               	clrf	___lmul@multiplicand+2
  1819     021C  1BF5               	btfsc	___lmul@multiplicand+1,7
  1820     021D  03F6               	decf	___lmul@multiplicand+2,f
  1821     021E  0876               	movf	___lmul@multiplicand+2,w
  1822     021F  00F7               	movwf	___lmul@multiplicand+3
  1823     0220  120A  118A  21B6  120A  118A  	fcall	___lmul
  1824     0225  0873               	movf	?___lmul+3,w
  1825     0226  1283               	bcf	3,5	;RP0=0, select bank0
  1826     0227  1303               	bcf	3,6	;RP1=0, select bank0
  1827     0228  00A7               	movwf	___aldiv@dividend+3
  1828     0229  0872               	movf	?___lmul+2,w
  1829     022A  00A6               	movwf	___aldiv@dividend+2
  1830     022B  0871               	movf	?___lmul+1,w
  1831     022C  00A5               	movwf	___aldiv@dividend+1
  1832     022D  0870               	movf	?___lmul,w
  1833     022E  00A4               	movwf	___aldiv@dividend
  1834     022F  120A  118A  247A  120A  118A  	fcall	___aldiv
  1835     0234  1283               	bcf	3,5	;RP0=0, select bank0
  1836     0235  1303               	bcf	3,6	;RP1=0, select bank0
  1837     0236  0830               	movf	map@minsa,w
  1838     0237  0720               	addwf	?___aldiv,w
  1839     0238  00B7               	movwf	map@resultado
  1840     0239  3000               	movlw	0
  1841     023A  1803               	skipnc
  1842     023B  3001               	movlw	1
  1843     023C  0721               	addwf	?___aldiv+1,w
  1844     023D  00B8               	movwf	map@resultado+1
  1845     023E                     l1623:
  1846                           
  1847                           ;main.c: 177:     return resultado;
  1848     023E  0838               	movf	map@resultado+1,w
  1849     023F  00AF               	movwf	?_map+1
  1850     0240  0837               	movf	map@resultado,w
  1851     0241  00AE               	movwf	?_map
  1852     0242                     l126:
  1853     0242  0008               	return
  1854     0243                     __end_of_map:
  1855                           
  1856                           	psect	text7
  1857     01B6                     __ptext7:	
  1858 ;; *************** function ___lmul *****************
  1859 ;; Defined at:
  1860 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  multiplier      4    0[COMMON] unsigned long 
  1863 ;;  multiplicand    4    4[COMMON] unsigned long 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  product         4    9[COMMON] unsigned long 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  4    0[COMMON] unsigned long 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         8       0       0       0       0
  1876 ;;      Locals:         4       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0
  1878 ;;      Totals:        13       0       0       0       0
  1879 ;;Total ram usage:       13 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_map
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888     01B6                     ___lmul:	
  1889                           ;psect for function ___lmul
  1890                           
  1891     01B6                     l1367:	
  1892                           ;incstack = 0
  1893                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1894                           
  1895     01B6  3000               	movlw	0
  1896     01B7  00FC               	movwf	___lmul@product+3
  1897     01B8  3000               	movlw	0
  1898     01B9  00FB               	movwf	___lmul@product+2
  1899     01BA  3000               	movlw	0
  1900     01BB  00FA               	movwf	___lmul@product+1
  1901     01BC  3000               	movlw	0
  1902     01BD  00F9               	movwf	___lmul@product
  1903     01BE                     l1369:
  1904     01BE  1C70               	btfss	___lmul@multiplier,0
  1905     01BF  29C1               	goto	u941
  1906     01C0  29C2               	goto	u940
  1907     01C1                     u941:
  1908     01C1  29D9               	goto	l1373
  1909     01C2                     u940:
  1910     01C2                     l1371:
  1911     01C2  0874               	movf	___lmul@multiplicand,w
  1912     01C3  07F9               	addwf	___lmul@product,f
  1913     01C4  0875               	movf	___lmul@multiplicand+1,w
  1914     01C5  1103               	clrz
  1915     01C6  1803               	skipnc
  1916     01C7  3E01               	addlw	1
  1917     01C8  1903               	skipnz
  1918     01C9  29CB               	goto	u951
  1919     01CA  07FA               	addwf	___lmul@product+1,f
  1920     01CB                     u951:
  1921     01CB  0876               	movf	___lmul@multiplicand+2,w
  1922     01CC  1103               	clrz
  1923     01CD  1803               	skipnc
  1924     01CE  3E01               	addlw	1
  1925     01CF  1903               	skipnz
  1926     01D0  29D2               	goto	u952
  1927     01D1  07FB               	addwf	___lmul@product+2,f
  1928     01D2                     u952:
  1929     01D2  0877               	movf	___lmul@multiplicand+3,w
  1930     01D3  1103               	clrz
  1931     01D4  1803               	skipnc
  1932     01D5  3E01               	addlw	1
  1933     01D6  1903               	skipnz
  1934     01D7  29D9               	goto	u953
  1935     01D8  07FC               	addwf	___lmul@product+3,f
  1936     01D9                     u953:
  1937     01D9                     l1373:
  1938     01D9  3001               	movlw	1
  1939     01DA  00F8               	movwf	??___lmul
  1940     01DB                     u965:
  1941     01DB  1003               	clrc
  1942     01DC  0DF4               	rlf	___lmul@multiplicand,f
  1943     01DD  0DF5               	rlf	___lmul@multiplicand+1,f
  1944     01DE  0DF6               	rlf	___lmul@multiplicand+2,f
  1945     01DF  0DF7               	rlf	___lmul@multiplicand+3,f
  1946     01E0  0BF8               	decfsz	??___lmul,f
  1947     01E1  29DB               	goto	u965
  1948     01E2                     l1375:
  1949     01E2  3001               	movlw	1
  1950     01E3                     u975:
  1951     01E3  1003               	clrc
  1952     01E4  0CF3               	rrf	___lmul@multiplier+3,f
  1953     01E5  0CF2               	rrf	___lmul@multiplier+2,f
  1954     01E6  0CF1               	rrf	___lmul@multiplier+1,f
  1955     01E7  0CF0               	rrf	___lmul@multiplier,f
  1956     01E8  3EFF               	addlw	-1
  1957     01E9  1D03               	skipz
  1958     01EA  29E3               	goto	u975
  1959     01EB  0873               	movf	___lmul@multiplier+3,w
  1960     01EC  0472               	iorwf	___lmul@multiplier+2,w
  1961     01ED  0471               	iorwf	___lmul@multiplier+1,w
  1962     01EE  0470               	iorwf	___lmul@multiplier,w
  1963     01EF  1D03               	skipz
  1964     01F0  29F2               	goto	u981
  1965     01F1  29F3               	goto	u980
  1966     01F2                     u981:
  1967     01F2  29BE               	goto	l1369
  1968     01F3                     u980:
  1969     01F3                     l1377:
  1970     01F3  087C               	movf	___lmul@product+3,w
  1971     01F4  00F3               	movwf	?___lmul+3
  1972     01F5  087B               	movf	___lmul@product+2,w
  1973     01F6  00F2               	movwf	?___lmul+2
  1974     01F7  087A               	movf	___lmul@product+1,w
  1975     01F8  00F1               	movwf	?___lmul+1
  1976     01F9  0879               	movf	___lmul@product,w
  1977     01FA  00F0               	movwf	?___lmul
  1978     01FB                     l301:
  1979     01FB  0008               	return
  1980     01FC                     __end_of___lmul:
  1981                           
  1982                           	psect	text8
  1983     047A                     __ptext8:	
  1984 ;; *************** function ___aldiv *****************
  1985 ;; Defined at:
  1986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  divisor         4    0[BANK0 ] long 
  1989 ;;  dividend        4    4[BANK0 ] long 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  quotient        4   10[BANK0 ] long 
  1992 ;;  sign            1    9[BANK0 ] unsigned char 
  1993 ;;  counter         1    8[BANK0 ] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  4    0[BANK0 ] long 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       8       0       0       0
  2004 ;;      Locals:         0       6       0       0       0
  2005 ;;      Temps:          1       0       0       0       0
  2006 ;;      Totals:         1      14       0       0       0
  2007 ;;Total ram usage:       15 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_map
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     047A                     ___aldiv:	
  2017                           ;psect for function ___aldiv
  2018                           
  2019     047A                     l1381:	
  2020                           ;incstack = 0
  2021                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2022                           
  2023     047A  1283               	bcf	3,5	;RP0=0, select bank0
  2024     047B  1303               	bcf	3,6	;RP1=0, select bank0
  2025     047C  01A9               	clrf	___aldiv@sign
  2026     047D                     l1383:
  2027     047D  1FA3               	btfss	___aldiv@divisor+3,7
  2028     047E  2C80               	goto	u991
  2029     047F  2C81               	goto	u990
  2030     0480                     u991:
  2031     0480  2C8E               	goto	l352
  2032     0481                     u990:
  2033     0481                     l1385:
  2034     0481  09A0               	comf	___aldiv@divisor,f
  2035     0482  09A1               	comf	___aldiv@divisor+1,f
  2036     0483  09A2               	comf	___aldiv@divisor+2,f
  2037     0484  09A3               	comf	___aldiv@divisor+3,f
  2038     0485  0AA0               	incf	___aldiv@divisor,f
  2039     0486  1903               	skipnz
  2040     0487  0AA1               	incf	___aldiv@divisor+1,f
  2041     0488  1903               	skipnz
  2042     0489  0AA2               	incf	___aldiv@divisor+2,f
  2043     048A  1903               	skipnz
  2044     048B  0AA3               	incf	___aldiv@divisor+3,f
  2045     048C  01A9               	clrf	___aldiv@sign
  2046     048D  0AA9               	incf	___aldiv@sign,f
  2047     048E                     l352:
  2048     048E  1FA7               	btfss	___aldiv@dividend+3,7
  2049     048F  2C91               	goto	u1001
  2050     0490  2C92               	goto	u1000
  2051     0491                     u1001:
  2052     0491  2CA1               	goto	l1391
  2053     0492                     u1000:
  2054     0492                     l1387:
  2055     0492  09A4               	comf	___aldiv@dividend,f
  2056     0493  09A5               	comf	___aldiv@dividend+1,f
  2057     0494  09A6               	comf	___aldiv@dividend+2,f
  2058     0495  09A7               	comf	___aldiv@dividend+3,f
  2059     0496  0AA4               	incf	___aldiv@dividend,f
  2060     0497  1903               	skipnz
  2061     0498  0AA5               	incf	___aldiv@dividend+1,f
  2062     0499  1903               	skipnz
  2063     049A  0AA6               	incf	___aldiv@dividend+2,f
  2064     049B  1903               	skipnz
  2065     049C  0AA7               	incf	___aldiv@dividend+3,f
  2066     049D                     l1389:
  2067     049D  3001               	movlw	1
  2068     049E  00FD               	movwf	??___aldiv
  2069     049F  087D               	movf	??___aldiv,w
  2070     04A0  06A9               	xorwf	___aldiv@sign,f
  2071     04A1                     l1391:
  2072     04A1  3000               	movlw	0
  2073     04A2  00AD               	movwf	___aldiv@quotient+3
  2074     04A3  3000               	movlw	0
  2075     04A4  00AC               	movwf	___aldiv@quotient+2
  2076     04A5  3000               	movlw	0
  2077     04A6  00AB               	movwf	___aldiv@quotient+1
  2078     04A7  3000               	movlw	0
  2079     04A8  00AA               	movwf	___aldiv@quotient
  2080     04A9                     l1393:
  2081     04A9  0823               	movf	___aldiv@divisor+3,w
  2082     04AA  0422               	iorwf	___aldiv@divisor+2,w
  2083     04AB  0421               	iorwf	___aldiv@divisor+1,w
  2084     04AC  0420               	iorwf	___aldiv@divisor,w
  2085     04AD  1903               	skipnz
  2086     04AE  2CB0               	goto	u1011
  2087     04AF  2CB1               	goto	u1010
  2088     04B0                     u1011:
  2089     04B0  2CFE               	goto	l1413
  2090     04B1                     u1010:
  2091     04B1                     l1395:
  2092     04B1  01A8               	clrf	___aldiv@counter
  2093     04B2  0AA8               	incf	___aldiv@counter,f
  2094     04B3  2CC1               	goto	l1399
  2095     04B4                     l1397:
  2096     04B4  3001               	movlw	1
  2097     04B5  00FD               	movwf	??___aldiv
  2098     04B6                     u1025:
  2099     04B6  1003               	clrc
  2100     04B7  0DA0               	rlf	___aldiv@divisor,f
  2101     04B8  0DA1               	rlf	___aldiv@divisor+1,f
  2102     04B9  0DA2               	rlf	___aldiv@divisor+2,f
  2103     04BA  0DA3               	rlf	___aldiv@divisor+3,f
  2104     04BB  0BFD               	decfsz	??___aldiv,f
  2105     04BC  2CB6               	goto	u1025
  2106     04BD  3001               	movlw	1
  2107     04BE  00FD               	movwf	??___aldiv
  2108     04BF  087D               	movf	??___aldiv,w
  2109     04C0  07A8               	addwf	___aldiv@counter,f
  2110     04C1                     l1399:
  2111     04C1  1FA3               	btfss	___aldiv@divisor+3,7
  2112     04C2  2CC4               	goto	u1031
  2113     04C3  2CC5               	goto	u1030
  2114     04C4                     u1031:
  2115     04C4  2CB4               	goto	l1397
  2116     04C5                     u1030:
  2117     04C5                     l1401:
  2118     04C5  3001               	movlw	1
  2119     04C6  00FD               	movwf	??___aldiv
  2120     04C7                     u1045:
  2121     04C7  1003               	clrc
  2122     04C8  0DAA               	rlf	___aldiv@quotient,f
  2123     04C9  0DAB               	rlf	___aldiv@quotient+1,f
  2124     04CA  0DAC               	rlf	___aldiv@quotient+2,f
  2125     04CB  0DAD               	rlf	___aldiv@quotient+3,f
  2126     04CC  0BFD               	decfsz	??___aldiv,f
  2127     04CD  2CC7               	goto	u1045
  2128     04CE                     l1403:
  2129     04CE  0823               	movf	___aldiv@divisor+3,w
  2130     04CF  0227               	subwf	___aldiv@dividend+3,w
  2131     04D0  1D03               	skipz
  2132     04D1  2CDC               	goto	u1055
  2133     04D2  0822               	movf	___aldiv@divisor+2,w
  2134     04D3  0226               	subwf	___aldiv@dividend+2,w
  2135     04D4  1D03               	skipz
  2136     04D5  2CDC               	goto	u1055
  2137     04D6  0821               	movf	___aldiv@divisor+1,w
  2138     04D7  0225               	subwf	___aldiv@dividend+1,w
  2139     04D8  1D03               	skipz
  2140     04D9  2CDC               	goto	u1055
  2141     04DA  0820               	movf	___aldiv@divisor,w
  2142     04DB  0224               	subwf	___aldiv@dividend,w
  2143     04DC                     u1055:
  2144     04DC  1C03               	skipc
  2145     04DD  2CDF               	goto	u1051
  2146     04DE  2CE0               	goto	u1050
  2147     04DF                     u1051:
  2148     04DF  2CEF               	goto	l1409
  2149     04E0                     u1050:
  2150     04E0                     l1405:
  2151     04E0  0820               	movf	___aldiv@divisor,w
  2152     04E1  02A4               	subwf	___aldiv@dividend,f
  2153     04E2  0821               	movf	___aldiv@divisor+1,w
  2154     04E3  1C03               	skipc
  2155     04E4  0F21               	incfsz	___aldiv@divisor+1,w
  2156     04E5  02A5               	subwf	___aldiv@dividend+1,f
  2157     04E6  0822               	movf	___aldiv@divisor+2,w
  2158     04E7  1C03               	skipc
  2159     04E8  0F22               	incfsz	___aldiv@divisor+2,w
  2160     04E9  02A6               	subwf	___aldiv@dividend+2,f
  2161     04EA  0823               	movf	___aldiv@divisor+3,w
  2162     04EB  1C03               	skipc
  2163     04EC  0F23               	incfsz	___aldiv@divisor+3,w
  2164     04ED  02A7               	subwf	___aldiv@dividend+3,f
  2165     04EE                     l1407:
  2166     04EE  142A               	bsf	___aldiv@quotient,0
  2167     04EF                     l1409:
  2168     04EF  3001               	movlw	1
  2169     04F0                     u1065:
  2170     04F0  1003               	clrc
  2171     04F1  0CA3               	rrf	___aldiv@divisor+3,f
  2172     04F2  0CA2               	rrf	___aldiv@divisor+2,f
  2173     04F3  0CA1               	rrf	___aldiv@divisor+1,f
  2174     04F4  0CA0               	rrf	___aldiv@divisor,f
  2175     04F5  3EFF               	addlw	-1
  2176     04F6  1D03               	skipz
  2177     04F7  2CF0               	goto	u1065
  2178     04F8                     l1411:
  2179     04F8  3001               	movlw	1
  2180     04F9  02A8               	subwf	___aldiv@counter,f
  2181     04FA  1D03               	btfss	3,2
  2182     04FB  2CFD               	goto	u1071
  2183     04FC  2CFE               	goto	u1070
  2184     04FD                     u1071:
  2185     04FD  2CC5               	goto	l1401
  2186     04FE                     u1070:
  2187     04FE                     l1413:
  2188     04FE  0829               	movf	___aldiv@sign,w
  2189     04FF  1903               	btfsc	3,2
  2190     0500  2D02               	goto	u1081
  2191     0501  2D03               	goto	u1080
  2192     0502                     u1081:
  2193     0502  2D0E               	goto	l1417
  2194     0503                     u1080:
  2195     0503                     l1415:
  2196     0503  09AA               	comf	___aldiv@quotient,f
  2197     0504  09AB               	comf	___aldiv@quotient+1,f
  2198     0505  09AC               	comf	___aldiv@quotient+2,f
  2199     0506  09AD               	comf	___aldiv@quotient+3,f
  2200     0507  0AAA               	incf	___aldiv@quotient,f
  2201     0508  1903               	skipnz
  2202     0509  0AAB               	incf	___aldiv@quotient+1,f
  2203     050A  1903               	skipnz
  2204     050B  0AAC               	incf	___aldiv@quotient+2,f
  2205     050C  1903               	skipnz
  2206     050D  0AAD               	incf	___aldiv@quotient+3,f
  2207     050E                     l1417:
  2208     050E  082D               	movf	___aldiv@quotient+3,w
  2209     050F  00A3               	movwf	?___aldiv+3
  2210     0510  082C               	movf	___aldiv@quotient+2,w
  2211     0511  00A2               	movwf	?___aldiv+2
  2212     0512  082B               	movf	___aldiv@quotient+1,w
  2213     0513  00A1               	movwf	?___aldiv+1
  2214     0514  082A               	movf	___aldiv@quotient,w
  2215     0515  00A0               	movwf	?___aldiv
  2216     0516                     l362:
  2217     0516  0008               	return
  2218     0517                     __end_of___aldiv:
  2219                           
  2220                           	psect	text9
  2221     0243                     __ptext9:	
  2222 ;; *************** function _intachar *****************
  2223 ;; Defined at:
  2224 ;;		line 121 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  n               1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  n               1    0[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         1       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         1       0       0       0       0
  2242 ;;Total ram usage:        1 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0243                     _intachar:	
  2252                           ;psect for function _intachar
  2253                           
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _intachar: [wreg+status,2+status,0]
  2257                           ;intachar@n stored from wreg
  2258     0243  00F0               	movwf	intachar@n
  2259     0244                     l1651:
  2260                           
  2261                           ;main.c: 122:     if(n == 0){
  2262     0244  0870               	movf	intachar@n,w
  2263     0245  1D03               	btfss	3,2
  2264     0246  2A48               	goto	u1471
  2265     0247  2A49               	goto	u1470
  2266     0248                     u1471:
  2267     0248  2A4B               	goto	l1659
  2268     0249                     u1470:
  2269     0249                     l1653:
  2270                           
  2271                           ;main.c: 123:         return '0';
  2272     0249  3030               	movlw	48
  2273     024A  2A92               	goto	l97
  2274     024B                     l1659:
  2275     024B  0370               	decf	intachar@n,w
  2276     024C  1D03               	btfss	3,2
  2277     024D  2A4F               	goto	u1481
  2278     024E  2A50               	goto	u1480
  2279     024F                     u1481:
  2280     024F  2A52               	goto	l1667
  2281     0250                     u1480:
  2282     0250                     l1661:
  2283                           
  2284                           ;main.c: 126:         return '1';
  2285     0250  3031               	movlw	49
  2286     0251  2A92               	goto	l97
  2287     0252                     l1667:
  2288     0252  3002               	movlw	2
  2289     0253  0670               	xorwf	intachar@n,w
  2290     0254  1D03               	btfss	3,2
  2291     0255  2A57               	goto	u1491
  2292     0256  2A58               	goto	u1490
  2293     0257                     u1491:
  2294     0257  2A5A               	goto	l1675
  2295     0258                     u1490:
  2296     0258                     l1669:
  2297                           
  2298                           ;main.c: 129:         return '2';
  2299     0258  3032               	movlw	50
  2300     0259  2A92               	goto	l97
  2301     025A                     l1675:
  2302     025A  3003               	movlw	3
  2303     025B  0670               	xorwf	intachar@n,w
  2304     025C  1D03               	btfss	3,2
  2305     025D  2A5F               	goto	u1501
  2306     025E  2A60               	goto	u1500
  2307     025F                     u1501:
  2308     025F  2A62               	goto	l1683
  2309     0260                     u1500:
  2310     0260                     l1677:
  2311                           
  2312                           ;main.c: 132:         return '3';
  2313     0260  3033               	movlw	51
  2314     0261  2A92               	goto	l97
  2315     0262                     l1683:
  2316     0262  3004               	movlw	4
  2317     0263  0670               	xorwf	intachar@n,w
  2318     0264  1D03               	btfss	3,2
  2319     0265  2A67               	goto	u1511
  2320     0266  2A68               	goto	u1510
  2321     0267                     u1511:
  2322     0267  2A6A               	goto	l1691
  2323     0268                     u1510:
  2324     0268                     l1685:
  2325                           
  2326                           ;main.c: 135:         return '4';
  2327     0268  3034               	movlw	52
  2328     0269  2A92               	goto	l97
  2329     026A                     l1691:
  2330     026A  3005               	movlw	5
  2331     026B  0670               	xorwf	intachar@n,w
  2332     026C  1D03               	btfss	3,2
  2333     026D  2A6F               	goto	u1521
  2334     026E  2A70               	goto	u1520
  2335     026F                     u1521:
  2336     026F  2A72               	goto	l1699
  2337     0270                     u1520:
  2338     0270                     l1693:
  2339                           
  2340                           ;main.c: 138:         return '5';
  2341     0270  3035               	movlw	53
  2342     0271  2A92               	goto	l97
  2343     0272                     l1699:
  2344     0272  3006               	movlw	6
  2345     0273  0670               	xorwf	intachar@n,w
  2346     0274  1D03               	btfss	3,2
  2347     0275  2A77               	goto	u1531
  2348     0276  2A78               	goto	u1530
  2349     0277                     u1531:
  2350     0277  2A7A               	goto	l1707
  2351     0278                     u1530:
  2352     0278                     l1701:
  2353                           
  2354                           ;main.c: 141:         return '6';
  2355     0278  3036               	movlw	54
  2356     0279  2A92               	goto	l97
  2357     027A                     l1707:
  2358     027A  3007               	movlw	7
  2359     027B  0670               	xorwf	intachar@n,w
  2360     027C  1D03               	btfss	3,2
  2361     027D  2A7F               	goto	u1541
  2362     027E  2A80               	goto	u1540
  2363     027F                     u1541:
  2364     027F  2A82               	goto	l1715
  2365     0280                     u1540:
  2366     0280                     l1709:
  2367                           
  2368                           ;main.c: 144:         return '7';
  2369     0280  3037               	movlw	55
  2370     0281  2A92               	goto	l97
  2371     0282                     l1715:
  2372     0282  3008               	movlw	8
  2373     0283  0670               	xorwf	intachar@n,w
  2374     0284  1D03               	btfss	3,2
  2375     0285  2A87               	goto	u1551
  2376     0286  2A88               	goto	u1550
  2377     0287                     u1551:
  2378     0287  2A8A               	goto	l1723
  2379     0288                     u1550:
  2380     0288                     l1717:
  2381                           
  2382                           ;main.c: 147:         return '8';
  2383     0288  3038               	movlw	56
  2384     0289  2A92               	goto	l97
  2385     028A                     l1723:
  2386     028A  3009               	movlw	9
  2387     028B  0670               	xorwf	intachar@n,w
  2388     028C  1D03               	btfss	3,2
  2389     028D  2A8F               	goto	u1561
  2390     028E  2A90               	goto	u1560
  2391     028F                     u1561:
  2392     028F  2A92               	goto	l110
  2393     0290                     u1560:
  2394     0290                     l1725:
  2395                           
  2396                           ;main.c: 150:         return '9';
  2397     0290  3039               	movlw	57
  2398     0291  2A92               	goto	l97
  2399     0292                     l110:
  2400     0292                     l97:
  2401     0292  0008               	return
  2402     0293                     __end_of_intachar:
  2403                           
  2404                           	psect	text10
  2405     033E                     __ptext10:	
  2406 ;; *************** function _deshacer *****************
  2407 ;; Defined at:
  2408 ;;		line 154 in file "main.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  p               2   10[COMMON] int 
  2411 ;;  nume            2   12[COMMON] unsigned int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  dec             1    4[BANK0 ] unsigned char 
  2414 ;;  uni             1    3[BANK0 ] unsigned char 
  2415 ;;  cente           1    2[BANK0 ] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      unsigned char 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         4       0       0       0       0
  2426 ;;      Locals:         0       3       0       0       0
  2427 ;;      Temps:          0       2       0       0       0
  2428 ;;      Totals:         4       5       0       0       0
  2429 ;;Total ram usage:        9 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 1
  2432 ;; This function calls:
  2433 ;;		___awdiv
  2434 ;;		___awmod
  2435 ;;		___lwdiv
  2436 ;;		___lwmod
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442     033E                     _deshacer:	
  2443                           ;psect for function _deshacer
  2444                           
  2445     033E                     l1627:	
  2446                           ;incstack = 0
  2447                           ; Regs used in _deshacer: [wreg+status,2+status,0+pclath+cstack]
  2448                           
  2449                           
  2450                           ;main.c: 155:     uint8_t cente;;main.c: 156:     uint8_t dec;;main.c: 157:     uint8_t 
      +                          uni;;main.c: 158:     cente = (nume/100);
  2451     033E  3064               	movlw	100
  2452     033F  00F0               	movwf	___lwdiv@divisor
  2453     0340  3000               	movlw	0
  2454     0341  00F1               	movwf	___lwdiv@divisor+1
  2455     0342  087D               	movf	deshacer@nume+1,w
  2456     0343  00F3               	movwf	___lwdiv@dividend+1
  2457     0344  087C               	movf	deshacer@nume,w
  2458     0345  00F2               	movwf	___lwdiv@dividend
  2459     0346  120A  118A  2172  120A  118A  	fcall	___lwdiv
  2460     034B  0870               	movf	?___lwdiv,w
  2461     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2462     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2463     034E  00A2               	movwf	deshacer@cente
  2464                           
  2465                           ;main.c: 159:     dec = (nume%100);
  2466     034F  3064               	movlw	100
  2467     0350  00F0               	movwf	___lwmod@divisor
  2468     0351  3000               	movlw	0
  2469     0352  00F1               	movwf	___lwmod@divisor+1
  2470     0353  087D               	movf	deshacer@nume+1,w
  2471     0354  00F3               	movwf	___lwmod@dividend+1
  2472     0355  087C               	movf	deshacer@nume,w
  2473     0356  00F2               	movwf	___lwmod@dividend
  2474     0357  120A  118A  2138  120A  118A  	fcall	___lwmod
  2475     035C  0870               	movf	?___lwmod,w
  2476     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2477     035E  1303               	bcf	3,6	;RP1=0, select bank0
  2478     035F  00A4               	movwf	deshacer@dec
  2479                           
  2480                           ;main.c: 160:     uni = (dec%10);
  2481     0360  300A               	movlw	10
  2482     0361  00F0               	movwf	___awmod@divisor
  2483     0362  3000               	movlw	0
  2484     0363  00F1               	movwf	___awmod@divisor+1
  2485     0364  0824               	movf	deshacer@dec,w
  2486     0365  00A0               	movwf	??_deshacer
  2487     0366  01A1               	clrf	??_deshacer+1
  2488     0367  0820               	movf	??_deshacer,w
  2489     0368  00F2               	movwf	___awmod@dividend
  2490     0369  0821               	movf	??_deshacer+1,w
  2491     036A  00F3               	movwf	___awmod@dividend+1
  2492     036B  120A  118A  22E5  120A  118A  	fcall	___awmod
  2493     0370  0870               	movf	?___awmod,w
  2494     0371  1283               	bcf	3,5	;RP0=0, select bank0
  2495     0372  1303               	bcf	3,6	;RP1=0, select bank0
  2496     0373  00A3               	movwf	deshacer@uni
  2497     0374                     l1629:
  2498                           
  2499                           ;main.c: 161:     if(p == 2){
  2500     0374  3002               	movlw	2
  2501     0375  067A               	xorwf	deshacer@p,w
  2502     0376  047B               	iorwf	deshacer@p+1,w
  2503     0377  1D03               	btfss	3,2
  2504     0378  2B7A               	goto	u1441
  2505     0379  2B7B               	goto	u1440
  2506     037A                     u1441:
  2507     037A  2B7D               	goto	l1637
  2508     037B                     u1440:
  2509     037B                     l1631:
  2510                           
  2511                           ;main.c: 162:         return cente;
  2512     037B  0822               	movf	deshacer@cente,w
  2513     037C  2B9C               	goto	l119
  2514     037D                     l1637:
  2515     037D  037A               	decf	deshacer@p,w
  2516     037E  047B               	iorwf	deshacer@p+1,w
  2517     037F  1D03               	btfss	3,2
  2518     0380  2B82               	goto	u1451
  2519     0381  2B83               	goto	u1450
  2520     0382                     u1451:
  2521     0382  2B95               	goto	l1645
  2522     0383                     u1450:
  2523     0383                     l1639:
  2524                           
  2525                           ;main.c: 165:         return (dec/10);
  2526     0383  300A               	movlw	10
  2527     0384  00F0               	movwf	___awdiv@divisor
  2528     0385  3000               	movlw	0
  2529     0386  00F1               	movwf	___awdiv@divisor+1
  2530     0387  0824               	movf	deshacer@dec,w
  2531     0388  00A0               	movwf	??_deshacer
  2532     0389  01A1               	clrf	??_deshacer+1
  2533     038A  0820               	movf	??_deshacer,w
  2534     038B  00F2               	movwf	___awdiv@dividend
  2535     038C  0821               	movf	??_deshacer+1,w
  2536     038D  00F3               	movwf	___awdiv@dividend+1
  2537     038E  120A  118A  239D  120A  118A  	fcall	___awdiv
  2538     0393  0870               	movf	?___awdiv,w
  2539     0394  2B9C               	goto	l119
  2540     0395                     l1645:
  2541     0395  087A               	movf	deshacer@p,w
  2542     0396  047B               	iorwf	deshacer@p+1,w
  2543     0397  1D03               	btfss	3,2
  2544     0398  2B9A               	goto	u1461
  2545     0399  2B9B               	goto	u1460
  2546     039A                     u1461:
  2547     039A  2B9C               	goto	l119
  2548     039B                     u1460:
  2549     039B                     l1647:
  2550                           
  2551                           ;main.c: 168:         return uni;
  2552     039B  0823               	movf	deshacer@uni,w
  2553     039C                     l119:
  2554     039C  0008               	return
  2555     039D                     __end_of_deshacer:
  2556                           
  2557                           	psect	text11
  2558     0138                     __ptext11:	
  2559 ;; *************** function ___lwmod *****************
  2560 ;; Defined at:
  2561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  divisor         2    0[COMMON] unsigned int 
  2564 ;;  dividend        2    2[COMMON] unsigned int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  counter         1    5[COMMON] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2    0[COMMON] unsigned int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         4       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0
  2578 ;;      Temps:          1       0       0       0       0
  2579 ;;      Totals:         6       0       0       0       0
  2580 ;;Total ram usage:        6 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_deshacer
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589     0138                     ___lwmod:	
  2590                           ;psect for function ___lwmod
  2591                           
  2592     0138                     l1529:	
  2593                           ;incstack = 0
  2594                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2595                           
  2596     0138  0870               	movf	___lwmod@divisor,w
  2597     0139  0471               	iorwf	___lwmod@divisor+1,w
  2598     013A  1903               	btfsc	3,2
  2599     013B  293D               	goto	u1351
  2600     013C  293E               	goto	u1350
  2601     013D                     u1351:
  2602     013D  296D               	goto	l1547
  2603     013E                     u1350:
  2604     013E                     l1531:
  2605     013E  01F5               	clrf	___lwmod@counter
  2606     013F  0AF5               	incf	___lwmod@counter,f
  2607     0140  294C               	goto	l1537
  2608     0141                     l1533:
  2609     0141  3001               	movlw	1
  2610     0142                     u1365:
  2611     0142  1003               	clrc
  2612     0143  0DF0               	rlf	___lwmod@divisor,f
  2613     0144  0DF1               	rlf	___lwmod@divisor+1,f
  2614     0145  3EFF               	addlw	-1
  2615     0146  1D03               	skipz
  2616     0147  2942               	goto	u1365
  2617     0148                     l1535:
  2618     0148  3001               	movlw	1
  2619     0149  00F4               	movwf	??___lwmod
  2620     014A  0874               	movf	??___lwmod,w
  2621     014B  07F5               	addwf	___lwmod@counter,f
  2622     014C                     l1537:
  2623     014C  1FF1               	btfss	___lwmod@divisor+1,7
  2624     014D  294F               	goto	u1371
  2625     014E  2950               	goto	u1370
  2626     014F                     u1371:
  2627     014F  2941               	goto	l1533
  2628     0150                     u1370:
  2629     0150                     l1539:
  2630     0150  0871               	movf	___lwmod@divisor+1,w
  2631     0151  0273               	subwf	___lwmod@dividend+1,w
  2632     0152  1D03               	skipz
  2633     0153  2956               	goto	u1385
  2634     0154  0870               	movf	___lwmod@divisor,w
  2635     0155  0272               	subwf	___lwmod@dividend,w
  2636     0156                     u1385:
  2637     0156  1C03               	skipc
  2638     0157  2959               	goto	u1381
  2639     0158  295A               	goto	u1380
  2640     0159                     u1381:
  2641     0159  2960               	goto	l1543
  2642     015A                     u1380:
  2643     015A                     l1541:
  2644     015A  0870               	movf	___lwmod@divisor,w
  2645     015B  02F2               	subwf	___lwmod@dividend,f
  2646     015C  0871               	movf	___lwmod@divisor+1,w
  2647     015D  1C03               	skipc
  2648     015E  03F3               	decf	___lwmod@dividend+1,f
  2649     015F  02F3               	subwf	___lwmod@dividend+1,f
  2650     0160                     l1543:
  2651     0160  3001               	movlw	1
  2652     0161                     u1395:
  2653     0161  1003               	clrc
  2654     0162  0CF1               	rrf	___lwmod@divisor+1,f
  2655     0163  0CF0               	rrf	___lwmod@divisor,f
  2656     0164  3EFF               	addlw	-1
  2657     0165  1D03               	skipz
  2658     0166  2961               	goto	u1395
  2659     0167                     l1545:
  2660     0167  3001               	movlw	1
  2661     0168  02F5               	subwf	___lwmod@counter,f
  2662     0169  1D03               	btfss	3,2
  2663     016A  296C               	goto	u1401
  2664     016B  296D               	goto	u1400
  2665     016C                     u1401:
  2666     016C  2950               	goto	l1539
  2667     016D                     u1400:
  2668     016D                     l1547:
  2669     016D  0873               	movf	___lwmod@dividend+1,w
  2670     016E  00F1               	movwf	?___lwmod+1
  2671     016F  0872               	movf	___lwmod@dividend,w
  2672     0170  00F0               	movwf	?___lwmod
  2673     0171                     l569:
  2674     0171  0008               	return
  2675     0172                     __end_of___lwmod:
  2676                           
  2677                           	psect	text12
  2678     0172                     __ptext12:	
  2679 ;; *************** function ___lwdiv *****************
  2680 ;; Defined at:
  2681 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  divisor         2    0[COMMON] unsigned int 
  2684 ;;  dividend        2    2[COMMON] unsigned int 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  quotient        2    5[COMMON] unsigned int 
  2687 ;;  counter         1    7[COMMON] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[COMMON] unsigned int 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         4       0       0       0       0
  2698 ;;      Locals:         3       0       0       0       0
  2699 ;;      Temps:          1       0       0       0       0
  2700 ;;      Totals:         8       0       0       0       0
  2701 ;;Total ram usage:        8 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_deshacer
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710     0172                     ___lwdiv:	
  2711                           ;psect for function ___lwdiv
  2712                           
  2713     0172                     l1503:	
  2714                           ;incstack = 0
  2715                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2716                           
  2717     0172  01F5               	clrf	___lwdiv@quotient
  2718     0173  01F6               	clrf	___lwdiv@quotient+1
  2719     0174                     l1505:
  2720     0174  0870               	movf	___lwdiv@divisor,w
  2721     0175  0471               	iorwf	___lwdiv@divisor+1,w
  2722     0176  1903               	btfsc	3,2
  2723     0177  2979               	goto	u1281
  2724     0178  297A               	goto	u1280
  2725     0179                     u1281:
  2726     0179  29B1               	goto	l1525
  2727     017A                     u1280:
  2728     017A                     l1507:
  2729     017A  01F7               	clrf	___lwdiv@counter
  2730     017B  0AF7               	incf	___lwdiv@counter,f
  2731     017C  2988               	goto	l1513
  2732     017D                     l1509:
  2733     017D  3001               	movlw	1
  2734     017E                     u1295:
  2735     017E  1003               	clrc
  2736     017F  0DF0               	rlf	___lwdiv@divisor,f
  2737     0180  0DF1               	rlf	___lwdiv@divisor+1,f
  2738     0181  3EFF               	addlw	-1
  2739     0182  1D03               	skipz
  2740     0183  297E               	goto	u1295
  2741     0184                     l1511:
  2742     0184  3001               	movlw	1
  2743     0185  00F4               	movwf	??___lwdiv
  2744     0186  0874               	movf	??___lwdiv,w
  2745     0187  07F7               	addwf	___lwdiv@counter,f
  2746     0188                     l1513:
  2747     0188  1FF1               	btfss	___lwdiv@divisor+1,7
  2748     0189  298B               	goto	u1301
  2749     018A  298C               	goto	u1300
  2750     018B                     u1301:
  2751     018B  297D               	goto	l1509
  2752     018C                     u1300:
  2753     018C                     l1515:
  2754     018C  3001               	movlw	1
  2755     018D                     u1315:
  2756     018D  1003               	clrc
  2757     018E  0DF5               	rlf	___lwdiv@quotient,f
  2758     018F  0DF6               	rlf	___lwdiv@quotient+1,f
  2759     0190  3EFF               	addlw	-1
  2760     0191  1D03               	skipz
  2761     0192  298D               	goto	u1315
  2762     0193  0871               	movf	___lwdiv@divisor+1,w
  2763     0194  0273               	subwf	___lwdiv@dividend+1,w
  2764     0195  1D03               	skipz
  2765     0196  2999               	goto	u1325
  2766     0197  0870               	movf	___lwdiv@divisor,w
  2767     0198  0272               	subwf	___lwdiv@dividend,w
  2768     0199                     u1325:
  2769     0199  1C03               	skipc
  2770     019A  299C               	goto	u1321
  2771     019B  299D               	goto	u1320
  2772     019C                     u1321:
  2773     019C  29A4               	goto	l1521
  2774     019D                     u1320:
  2775     019D                     l1517:
  2776     019D  0870               	movf	___lwdiv@divisor,w
  2777     019E  02F2               	subwf	___lwdiv@dividend,f
  2778     019F  0871               	movf	___lwdiv@divisor+1,w
  2779     01A0  1C03               	skipc
  2780     01A1  03F3               	decf	___lwdiv@dividend+1,f
  2781     01A2  02F3               	subwf	___lwdiv@dividend+1,f
  2782     01A3                     l1519:
  2783     01A3  1475               	bsf	___lwdiv@quotient,0
  2784     01A4                     l1521:
  2785     01A4  3001               	movlw	1
  2786     01A5                     u1335:
  2787     01A5  1003               	clrc
  2788     01A6  0CF1               	rrf	___lwdiv@divisor+1,f
  2789     01A7  0CF0               	rrf	___lwdiv@divisor,f
  2790     01A8  3EFF               	addlw	-1
  2791     01A9  1D03               	skipz
  2792     01AA  29A5               	goto	u1335
  2793     01AB                     l1523:
  2794     01AB  3001               	movlw	1
  2795     01AC  02F7               	subwf	___lwdiv@counter,f
  2796     01AD  1D03               	btfss	3,2
  2797     01AE  29B0               	goto	u1341
  2798     01AF  29B1               	goto	u1340
  2799     01B0                     u1341:
  2800     01B0  298C               	goto	l1515
  2801     01B1                     u1340:
  2802     01B1                     l1525:
  2803     01B1  0876               	movf	___lwdiv@quotient+1,w
  2804     01B2  00F1               	movwf	?___lwdiv+1
  2805     01B3  0875               	movf	___lwdiv@quotient,w
  2806     01B4  00F0               	movwf	?___lwdiv
  2807     01B5                     l559:
  2808     01B5  0008               	return
  2809     01B6                     __end_of___lwdiv:
  2810                           
  2811                           	psect	text13
  2812     02E5                     __ptext13:	
  2813 ;; *************** function ___awmod *****************
  2814 ;; Defined at:
  2815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  divisor         2    0[COMMON] int 
  2818 ;;  dividend        2    2[COMMON] int 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  sign            1    6[COMMON] unsigned char 
  2821 ;;  counter         1    5[COMMON] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  2    0[COMMON] int 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         4       0       0       0       0
  2832 ;;      Locals:         2       0       0       0       0
  2833 ;;      Temps:          1       0       0       0       0
  2834 ;;      Totals:         7       0       0       0       0
  2835 ;;Total ram usage:        7 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_deshacer
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844     02E5                     ___awmod:	
  2845                           ;psect for function ___awmod
  2846                           
  2847     02E5                     l1465:	
  2848                           ;incstack = 0
  2849                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2850                           
  2851     02E5  01F6               	clrf	___awmod@sign
  2852     02E6                     l1467:
  2853     02E6  1FF3               	btfss	___awmod@dividend+1,7
  2854     02E7  2AE9               	goto	u1191
  2855     02E8  2AEA               	goto	u1190
  2856     02E9                     u1191:
  2857     02E9  2AF1               	goto	l1473
  2858     02EA                     u1190:
  2859     02EA                     l1469:
  2860     02EA  09F2               	comf	___awmod@dividend,f
  2861     02EB  09F3               	comf	___awmod@dividend+1,f
  2862     02EC  0AF2               	incf	___awmod@dividend,f
  2863     02ED  1903               	skipnz
  2864     02EE  0AF3               	incf	___awmod@dividend+1,f
  2865     02EF                     l1471:
  2866     02EF  01F6               	clrf	___awmod@sign
  2867     02F0  0AF6               	incf	___awmod@sign,f
  2868     02F1                     l1473:
  2869     02F1  1FF1               	btfss	___awmod@divisor+1,7
  2870     02F2  2AF4               	goto	u1201
  2871     02F3  2AF5               	goto	u1200
  2872     02F4                     u1201:
  2873     02F4  2AFA               	goto	l1477
  2874     02F5                     u1200:
  2875     02F5                     l1475:
  2876     02F5  09F0               	comf	___awmod@divisor,f
  2877     02F6  09F1               	comf	___awmod@divisor+1,f
  2878     02F7  0AF0               	incf	___awmod@divisor,f
  2879     02F8  1903               	skipnz
  2880     02F9  0AF1               	incf	___awmod@divisor+1,f
  2881     02FA                     l1477:
  2882     02FA  0870               	movf	___awmod@divisor,w
  2883     02FB  0471               	iorwf	___awmod@divisor+1,w
  2884     02FC  1903               	btfsc	3,2
  2885     02FD  2AFF               	goto	u1211
  2886     02FE  2B00               	goto	u1210
  2887     02FF                     u1211:
  2888     02FF  2B2F               	goto	l1495
  2889     0300                     u1210:
  2890     0300                     l1479:
  2891     0300  01F5               	clrf	___awmod@counter
  2892     0301  0AF5               	incf	___awmod@counter,f
  2893     0302  2B0E               	goto	l1485
  2894     0303                     l1481:
  2895     0303  3001               	movlw	1
  2896     0304                     u1225:
  2897     0304  1003               	clrc
  2898     0305  0DF0               	rlf	___awmod@divisor,f
  2899     0306  0DF1               	rlf	___awmod@divisor+1,f
  2900     0307  3EFF               	addlw	-1
  2901     0308  1D03               	skipz
  2902     0309  2B04               	goto	u1225
  2903     030A                     l1483:
  2904     030A  3001               	movlw	1
  2905     030B  00F4               	movwf	??___awmod
  2906     030C  0874               	movf	??___awmod,w
  2907     030D  07F5               	addwf	___awmod@counter,f
  2908     030E                     l1485:
  2909     030E  1FF1               	btfss	___awmod@divisor+1,7
  2910     030F  2B11               	goto	u1231
  2911     0310  2B12               	goto	u1230
  2912     0311                     u1231:
  2913     0311  2B03               	goto	l1481
  2914     0312                     u1230:
  2915     0312                     l1487:
  2916     0312  0871               	movf	___awmod@divisor+1,w
  2917     0313  0273               	subwf	___awmod@dividend+1,w
  2918     0314  1D03               	skipz
  2919     0315  2B18               	goto	u1245
  2920     0316  0870               	movf	___awmod@divisor,w
  2921     0317  0272               	subwf	___awmod@dividend,w
  2922     0318                     u1245:
  2923     0318  1C03               	skipc
  2924     0319  2B1B               	goto	u1241
  2925     031A  2B1C               	goto	u1240
  2926     031B                     u1241:
  2927     031B  2B22               	goto	l1491
  2928     031C                     u1240:
  2929     031C                     l1489:
  2930     031C  0870               	movf	___awmod@divisor,w
  2931     031D  02F2               	subwf	___awmod@dividend,f
  2932     031E  0871               	movf	___awmod@divisor+1,w
  2933     031F  1C03               	skipc
  2934     0320  03F3               	decf	___awmod@dividend+1,f
  2935     0321  02F3               	subwf	___awmod@dividend+1,f
  2936     0322                     l1491:
  2937     0322  3001               	movlw	1
  2938     0323                     u1255:
  2939     0323  1003               	clrc
  2940     0324  0CF1               	rrf	___awmod@divisor+1,f
  2941     0325  0CF0               	rrf	___awmod@divisor,f
  2942     0326  3EFF               	addlw	-1
  2943     0327  1D03               	skipz
  2944     0328  2B23               	goto	u1255
  2945     0329                     l1493:
  2946     0329  3001               	movlw	1
  2947     032A  02F5               	subwf	___awmod@counter,f
  2948     032B  1D03               	btfss	3,2
  2949     032C  2B2E               	goto	u1261
  2950     032D  2B2F               	goto	u1260
  2951     032E                     u1261:
  2952     032E  2B12               	goto	l1487
  2953     032F                     u1260:
  2954     032F                     l1495:
  2955     032F  0876               	movf	___awmod@sign,w
  2956     0330  1903               	btfsc	3,2
  2957     0331  2B33               	goto	u1271
  2958     0332  2B34               	goto	u1270
  2959     0333                     u1271:
  2960     0333  2B39               	goto	l1499
  2961     0334                     u1270:
  2962     0334                     l1497:
  2963     0334  09F2               	comf	___awmod@dividend,f
  2964     0335  09F3               	comf	___awmod@dividend+1,f
  2965     0336  0AF2               	incf	___awmod@dividend,f
  2966     0337  1903               	skipnz
  2967     0338  0AF3               	incf	___awmod@dividend+1,f
  2968     0339                     l1499:
  2969     0339  0873               	movf	___awmod@dividend+1,w
  2970     033A  00F1               	movwf	?___awmod+1
  2971     033B  0872               	movf	___awmod@dividend,w
  2972     033C  00F0               	movwf	?___awmod
  2973     033D                     l453:
  2974     033D  0008               	return
  2975     033E                     __end_of___awmod:
  2976                           
  2977                           	psect	text14
  2978     039D                     __ptext14:	
  2979 ;; *************** function ___awdiv *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    0[COMMON] int 
  2984 ;;  dividend        2    2[COMMON] int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  quotient        2    7[COMMON] int 
  2987 ;;  sign            1    6[COMMON] unsigned char 
  2988 ;;  counter         1    5[COMMON] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  2    0[COMMON] int 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         4       0       0       0       0
  2999 ;;      Locals:         4       0       0       0       0
  3000 ;;      Temps:          1       0       0       0       0
  3001 ;;      Totals:         9       0       0       0       0
  3002 ;;Total ram usage:        9 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_deshacer
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     039D                     ___awdiv:	
  3012                           ;psect for function ___awdiv
  3013                           
  3014     039D                     l1421:	
  3015                           ;incstack = 0
  3016                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3017                           
  3018     039D  01F6               	clrf	___awdiv@sign
  3019     039E                     l1423:
  3020     039E  1FF1               	btfss	___awdiv@divisor+1,7
  3021     039F  2BA1               	goto	u1091
  3022     03A0  2BA2               	goto	u1090
  3023     03A1                     u1091:
  3024     03A1  2BA9               	goto	l1429
  3025     03A2                     u1090:
  3026     03A2                     l1425:
  3027     03A2  09F0               	comf	___awdiv@divisor,f
  3028     03A3  09F1               	comf	___awdiv@divisor+1,f
  3029     03A4  0AF0               	incf	___awdiv@divisor,f
  3030     03A5  1903               	skipnz
  3031     03A6  0AF1               	incf	___awdiv@divisor+1,f
  3032     03A7                     l1427:
  3033     03A7  01F6               	clrf	___awdiv@sign
  3034     03A8  0AF6               	incf	___awdiv@sign,f
  3035     03A9                     l1429:
  3036     03A9  1FF3               	btfss	___awdiv@dividend+1,7
  3037     03AA  2BAC               	goto	u1101
  3038     03AB  2BAD               	goto	u1100
  3039     03AC                     u1101:
  3040     03AC  2BB6               	goto	l1435
  3041     03AD                     u1100:
  3042     03AD                     l1431:
  3043     03AD  09F2               	comf	___awdiv@dividend,f
  3044     03AE  09F3               	comf	___awdiv@dividend+1,f
  3045     03AF  0AF2               	incf	___awdiv@dividend,f
  3046     03B0  1903               	skipnz
  3047     03B1  0AF3               	incf	___awdiv@dividend+1,f
  3048     03B2                     l1433:
  3049     03B2  3001               	movlw	1
  3050     03B3  00F4               	movwf	??___awdiv
  3051     03B4  0874               	movf	??___awdiv,w
  3052     03B5  06F6               	xorwf	___awdiv@sign,f
  3053     03B6                     l1435:
  3054     03B6  01F7               	clrf	___awdiv@quotient
  3055     03B7  01F8               	clrf	___awdiv@quotient+1
  3056     03B8                     l1437:
  3057     03B8  0870               	movf	___awdiv@divisor,w
  3058     03B9  0471               	iorwf	___awdiv@divisor+1,w
  3059     03BA  1903               	btfsc	3,2
  3060     03BB  2BBD               	goto	u1111
  3061     03BC  2BBE               	goto	u1110
  3062     03BD                     u1111:
  3063     03BD  2BF5               	goto	l1457
  3064     03BE                     u1110:
  3065     03BE                     l1439:
  3066     03BE  01F5               	clrf	___awdiv@counter
  3067     03BF  0AF5               	incf	___awdiv@counter,f
  3068     03C0  2BCC               	goto	l1445
  3069     03C1                     l1441:
  3070     03C1  3001               	movlw	1
  3071     03C2                     u1125:
  3072     03C2  1003               	clrc
  3073     03C3  0DF0               	rlf	___awdiv@divisor,f
  3074     03C4  0DF1               	rlf	___awdiv@divisor+1,f
  3075     03C5  3EFF               	addlw	-1
  3076     03C6  1D03               	skipz
  3077     03C7  2BC2               	goto	u1125
  3078     03C8                     l1443:
  3079     03C8  3001               	movlw	1
  3080     03C9  00F4               	movwf	??___awdiv
  3081     03CA  0874               	movf	??___awdiv,w
  3082     03CB  07F5               	addwf	___awdiv@counter,f
  3083     03CC                     l1445:
  3084     03CC  1FF1               	btfss	___awdiv@divisor+1,7
  3085     03CD  2BCF               	goto	u1131
  3086     03CE  2BD0               	goto	u1130
  3087     03CF                     u1131:
  3088     03CF  2BC1               	goto	l1441
  3089     03D0                     u1130:
  3090     03D0                     l1447:
  3091     03D0  3001               	movlw	1
  3092     03D1                     u1145:
  3093     03D1  1003               	clrc
  3094     03D2  0DF7               	rlf	___awdiv@quotient,f
  3095     03D3  0DF8               	rlf	___awdiv@quotient+1,f
  3096     03D4  3EFF               	addlw	-1
  3097     03D5  1D03               	skipz
  3098     03D6  2BD1               	goto	u1145
  3099     03D7  0871               	movf	___awdiv@divisor+1,w
  3100     03D8  0273               	subwf	___awdiv@dividend+1,w
  3101     03D9  1D03               	skipz
  3102     03DA  2BDD               	goto	u1155
  3103     03DB  0870               	movf	___awdiv@divisor,w
  3104     03DC  0272               	subwf	___awdiv@dividend,w
  3105     03DD                     u1155:
  3106     03DD  1C03               	skipc
  3107     03DE  2BE0               	goto	u1151
  3108     03DF  2BE1               	goto	u1150
  3109     03E0                     u1151:
  3110     03E0  2BE8               	goto	l1453
  3111     03E1                     u1150:
  3112     03E1                     l1449:
  3113     03E1  0870               	movf	___awdiv@divisor,w
  3114     03E2  02F2               	subwf	___awdiv@dividend,f
  3115     03E3  0871               	movf	___awdiv@divisor+1,w
  3116     03E4  1C03               	skipc
  3117     03E5  03F3               	decf	___awdiv@dividend+1,f
  3118     03E6  02F3               	subwf	___awdiv@dividend+1,f
  3119     03E7                     l1451:
  3120     03E7  1477               	bsf	___awdiv@quotient,0
  3121     03E8                     l1453:
  3122     03E8  3001               	movlw	1
  3123     03E9                     u1165:
  3124     03E9  1003               	clrc
  3125     03EA  0CF1               	rrf	___awdiv@divisor+1,f
  3126     03EB  0CF0               	rrf	___awdiv@divisor,f
  3127     03EC  3EFF               	addlw	-1
  3128     03ED  1D03               	skipz
  3129     03EE  2BE9               	goto	u1165
  3130     03EF                     l1455:
  3131     03EF  3001               	movlw	1
  3132     03F0  02F5               	subwf	___awdiv@counter,f
  3133     03F1  1D03               	btfss	3,2
  3134     03F2  2BF4               	goto	u1171
  3135     03F3  2BF5               	goto	u1170
  3136     03F4                     u1171:
  3137     03F4  2BD0               	goto	l1447
  3138     03F5                     u1170:
  3139     03F5                     l1457:
  3140     03F5  0876               	movf	___awdiv@sign,w
  3141     03F6  1903               	btfsc	3,2
  3142     03F7  2BF9               	goto	u1181
  3143     03F8  2BFA               	goto	u1180
  3144     03F9                     u1181:
  3145     03F9  2BFF               	goto	l1461
  3146     03FA                     u1180:
  3147     03FA                     l1459:
  3148     03FA  09F7               	comf	___awdiv@quotient,f
  3149     03FB  09F8               	comf	___awdiv@quotient+1,f
  3150     03FC  0AF7               	incf	___awdiv@quotient,f
  3151     03FD  1903               	skipnz
  3152     03FE  0AF8               	incf	___awdiv@quotient+1,f
  3153     03FF                     l1461:
  3154     03FF  0878               	movf	___awdiv@quotient+1,w
  3155     0400  00F1               	movwf	?___awdiv+1
  3156     0401  0877               	movf	___awdiv@quotient,w
  3157     0402  00F0               	movwf	?___awdiv
  3158     0403                     l440:
  3159     0403  0008               	return
  3160     0404                     __end_of___awdiv:
  3161                           
  3162                           	psect	text15
  3163     0517                     __ptext15:	
  3164 ;; *************** function ___xxtofl *****************
  3165 ;; Defined at:
  3166 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  sign            1    wreg     unsigned char 
  3169 ;;  val             4   26[BANK0 ] long 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  sign            1   34[BANK0 ] unsigned char 
  3172 ;;  arg             4   36[BANK0 ] unsigned long 
  3173 ;;  exp             1   35[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  4   26[BANK0 ] unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       4       0       0       0
  3184 ;;      Locals:         0       6       0       0       0
  3185 ;;      Temps:          0       4       0       0       0
  3186 ;;      Totals:         0      14       0       0       0
  3187 ;;Total ram usage:       14 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196     0517                     ___xxtofl:	
  3197                           ;psect for function ___xxtofl
  3198                           
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3202                           ;___xxtofl@sign stored from wreg
  3203     0517  1283               	bcf	3,5	;RP0=0, select bank0
  3204     0518  1303               	bcf	3,6	;RP1=0, select bank0
  3205     0519  00C2               	movwf	___xxtofl@sign
  3206     051A                     l1765:
  3207     051A  0842               	movf	___xxtofl@sign,w
  3208     051B  1903               	btfsc	3,2
  3209     051C  2D1E               	goto	u1671
  3210     051D  2D1F               	goto	u1670
  3211     051E                     u1671:
  3212     051E  2D33               	goto	l1771
  3213     051F                     u1670:
  3214     051F                     l1767:
  3215     051F  1FBD               	btfss	___xxtofl@val+3,7
  3216     0520  2D22               	goto	u1681
  3217     0521  2D23               	goto	u1680
  3218     0522                     u1681:
  3219     0522  2D33               	goto	l1771
  3220     0523                     u1680:
  3221     0523                     l1769:
  3222     0523  093A               	comf	___xxtofl@val,w
  3223     0524  00C4               	movwf	___xxtofl@arg
  3224     0525  093B               	comf	___xxtofl@val+1,w
  3225     0526  00C5               	movwf	___xxtofl@arg+1
  3226     0527  093C               	comf	___xxtofl@val+2,w
  3227     0528  00C6               	movwf	___xxtofl@arg+2
  3228     0529  093D               	comf	___xxtofl@val+3,w
  3229     052A  00C7               	movwf	___xxtofl@arg+3
  3230     052B  0AC4               	incf	___xxtofl@arg,f
  3231     052C  1903               	skipnz
  3232     052D  0AC5               	incf	___xxtofl@arg+1,f
  3233     052E  1903               	skipnz
  3234     052F  0AC6               	incf	___xxtofl@arg+2,f
  3235     0530  1903               	skipnz
  3236     0531  0AC7               	incf	___xxtofl@arg+3,f
  3237     0532  2D3B               	goto	l720
  3238     0533                     l1771:
  3239     0533  083D               	movf	___xxtofl@val+3,w
  3240     0534  00C7               	movwf	___xxtofl@arg+3
  3241     0535  083C               	movf	___xxtofl@val+2,w
  3242     0536  00C6               	movwf	___xxtofl@arg+2
  3243     0537  083B               	movf	___xxtofl@val+1,w
  3244     0538  00C5               	movwf	___xxtofl@arg+1
  3245     0539  083A               	movf	___xxtofl@val,w
  3246     053A  00C4               	movwf	___xxtofl@arg
  3247     053B                     l720:
  3248     053B  083D               	movf	___xxtofl@val+3,w
  3249     053C  043C               	iorwf	___xxtofl@val+2,w
  3250     053D  043B               	iorwf	___xxtofl@val+1,w
  3251     053E  043A               	iorwf	___xxtofl@val,w
  3252     053F  1D03               	skipz
  3253     0540  2D42               	goto	u1691
  3254     0541  2D43               	goto	u1690
  3255     0542                     u1691:
  3256     0542  2D4C               	goto	l1777
  3257     0543                     u1690:
  3258     0543                     l1773:
  3259     0543  3000               	movlw	0
  3260     0544  00BD               	movwf	?___xxtofl+3
  3261     0545  3000               	movlw	0
  3262     0546  00BC               	movwf	?___xxtofl+2
  3263     0547  3000               	movlw	0
  3264     0548  00BB               	movwf	?___xxtofl+1
  3265     0549  3000               	movlw	0
  3266     054A  00BA               	movwf	?___xxtofl
  3267     054B  2DD0               	goto	l722
  3268     054C                     l1777:
  3269     054C  3096               	movlw	150
  3270     054D  00C3               	movwf	___xxtofl@exp
  3271     054E  2D5C               	goto	l1781
  3272     054F                     l1779:
  3273     054F  3001               	movlw	1
  3274     0550  00BE               	movwf	??___xxtofl
  3275     0551  083E               	movf	??___xxtofl,w
  3276     0552  07C3               	addwf	___xxtofl@exp,f
  3277     0553  3001               	movlw	1
  3278     0554                     u1705:
  3279     0554  1003               	clrc
  3280     0555  0CC7               	rrf	___xxtofl@arg+3,f
  3281     0556  0CC6               	rrf	___xxtofl@arg+2,f
  3282     0557  0CC5               	rrf	___xxtofl@arg+1,f
  3283     0558  0CC4               	rrf	___xxtofl@arg,f
  3284     0559  3EFF               	addlw	-1
  3285     055A  1D03               	skipz
  3286     055B  2D54               	goto	u1705
  3287     055C                     l1781:
  3288     055C  30FE               	movlw	254
  3289     055D  0547               	andwf	___xxtofl@arg+3,w
  3290     055E  1D03               	btfss	3,2
  3291     055F  2D61               	goto	u1711
  3292     0560  2D62               	goto	u1710
  3293     0561                     u1711:
  3294     0561  2D4F               	goto	l1779
  3295     0562                     u1710:
  3296     0562  2D7E               	goto	l726
  3297     0563                     l1783:
  3298     0563  3001               	movlw	1
  3299     0564  00BE               	movwf	??___xxtofl
  3300     0565  083E               	movf	??___xxtofl,w
  3301     0566  07C3               	addwf	___xxtofl@exp,f
  3302     0567                     l1785:
  3303     0567  3001               	movlw	1
  3304     0568  07C4               	addwf	___xxtofl@arg,f
  3305     0569  3000               	movlw	0
  3306     056A  1803               	skipnc
  3307     056B  3001               	movlw	1
  3308     056C  07C5               	addwf	___xxtofl@arg+1,f
  3309     056D  3000               	movlw	0
  3310     056E  1803               	skipnc
  3311     056F  3001               	movlw	1
  3312     0570  07C6               	addwf	___xxtofl@arg+2,f
  3313     0571  3000               	movlw	0
  3314     0572  1803               	skipnc
  3315     0573  3001               	movlw	1
  3316     0574  07C7               	addwf	___xxtofl@arg+3,f
  3317     0575                     l1787:
  3318     0575  3001               	movlw	1
  3319     0576                     u1725:
  3320     0576  1003               	clrc
  3321     0577  0CC7               	rrf	___xxtofl@arg+3,f
  3322     0578  0CC6               	rrf	___xxtofl@arg+2,f
  3323     0579  0CC5               	rrf	___xxtofl@arg+1,f
  3324     057A  0CC4               	rrf	___xxtofl@arg,f
  3325     057B  3EFF               	addlw	-1
  3326     057C  1D03               	skipz
  3327     057D  2D76               	goto	u1725
  3328     057E                     l726:
  3329     057E  30FF               	movlw	255
  3330     057F  0547               	andwf	___xxtofl@arg+3,w
  3331     0580  1D03               	btfss	3,2
  3332     0581  2D83               	goto	u1731
  3333     0582  2D84               	goto	u1730
  3334     0583                     u1731:
  3335     0583  2D63               	goto	l1783
  3336     0584                     u1730:
  3337     0584  2D90               	goto	l1791
  3338     0585                     l1789:
  3339     0585  3001               	movlw	1
  3340     0586  02C3               	subwf	___xxtofl@exp,f
  3341     0587  3001               	movlw	1
  3342     0588  00BE               	movwf	??___xxtofl
  3343     0589                     u1745:
  3344     0589  1003               	clrc
  3345     058A  0DC4               	rlf	___xxtofl@arg,f
  3346     058B  0DC5               	rlf	___xxtofl@arg+1,f
  3347     058C  0DC6               	rlf	___xxtofl@arg+2,f
  3348     058D  0DC7               	rlf	___xxtofl@arg+3,f
  3349     058E  0BBE               	decfsz	??___xxtofl,f
  3350     058F  2D89               	goto	u1745
  3351     0590                     l1791:
  3352     0590  1BC6               	btfsc	___xxtofl@arg+2,7
  3353     0591  2D93               	goto	u1751
  3354     0592  2D94               	goto	u1750
  3355     0593                     u1751:
  3356     0593  2D9A               	goto	l733
  3357     0594                     u1750:
  3358     0594                     l1793:
  3359     0594  3002               	movlw	2
  3360     0595  0243               	subwf	___xxtofl@exp,w
  3361     0596  1803               	skipnc
  3362     0597  2D99               	goto	u1761
  3363     0598  2D9A               	goto	u1760
  3364     0599                     u1761:
  3365     0599  2D85               	goto	l1789
  3366     059A                     u1760:
  3367     059A                     l733:
  3368     059A  1843               	btfsc	___xxtofl@exp,0
  3369     059B  2D9D               	goto	u1771
  3370     059C  2D9E               	goto	u1770
  3371     059D                     u1771:
  3372     059D  2DA6               	goto	l734
  3373     059E                     u1770:
  3374     059E                     l1795:
  3375     059E  30FF               	movlw	255
  3376     059F  05C4               	andwf	___xxtofl@arg,f
  3377     05A0  30FF               	movlw	255
  3378     05A1  05C5               	andwf	___xxtofl@arg+1,f
  3379     05A2  307F               	movlw	127
  3380     05A3  05C6               	andwf	___xxtofl@arg+2,f
  3381     05A4  30FF               	movlw	255
  3382     05A5  05C7               	andwf	___xxtofl@arg+3,f
  3383     05A6                     l734:
  3384     05A6  1003               	clrc
  3385     05A7  0CC3               	rrf	___xxtofl@exp,f
  3386     05A8                     l1797:
  3387     05A8  0843               	movf	___xxtofl@exp,w
  3388     05A9  00BE               	movwf	??___xxtofl
  3389     05AA  01BF               	clrf	??___xxtofl+1
  3390     05AB  01C0               	clrf	??___xxtofl+2
  3391     05AC  01C1               	clrf	??___xxtofl+3
  3392     05AD  3018               	movlw	24
  3393     05AE                     u1785:
  3394     05AE  1003               	clrc
  3395     05AF  0DBE               	rlf	??___xxtofl,f
  3396     05B0  0DBF               	rlf	??___xxtofl+1,f
  3397     05B1  0DC0               	rlf	??___xxtofl+2,f
  3398     05B2  0DC1               	rlf	??___xxtofl+3,f
  3399     05B3                     u1780:
  3400     05B3  3EFF               	addlw	-1
  3401     05B4  1D03               	skipz
  3402     05B5  2DAE               	goto	u1785
  3403     05B6  083E               	movf	??___xxtofl,w
  3404     05B7  04C4               	iorwf	___xxtofl@arg,f
  3405     05B8  083F               	movf	??___xxtofl+1,w
  3406     05B9  04C5               	iorwf	___xxtofl@arg+1,f
  3407     05BA  0840               	movf	??___xxtofl+2,w
  3408     05BB  04C6               	iorwf	___xxtofl@arg+2,f
  3409     05BC  0841               	movf	??___xxtofl+3,w
  3410     05BD  04C7               	iorwf	___xxtofl@arg+3,f
  3411     05BE                     l1799:
  3412     05BE  0842               	movf	___xxtofl@sign,w
  3413     05BF  1903               	btfsc	3,2
  3414     05C0  2DC2               	goto	u1791
  3415     05C1  2DC3               	goto	u1790
  3416     05C2                     u1791:
  3417     05C2  2DC8               	goto	l1805
  3418     05C3                     u1790:
  3419     05C3                     l1801:
  3420     05C3  1FBD               	btfss	___xxtofl@val+3,7
  3421     05C4  2DC6               	goto	u1801
  3422     05C5  2DC7               	goto	u1800
  3423     05C6                     u1801:
  3424     05C6  2DC8               	goto	l1805
  3425     05C7                     u1800:
  3426     05C7                     l1803:
  3427     05C7  17C7               	bsf	___xxtofl@arg+3,7
  3428     05C8                     l1805:
  3429     05C8  0847               	movf	___xxtofl@arg+3,w
  3430     05C9  00BD               	movwf	?___xxtofl+3
  3431     05CA  0846               	movf	___xxtofl@arg+2,w
  3432     05CB  00BC               	movwf	?___xxtofl+2
  3433     05CC  0845               	movf	___xxtofl@arg+1,w
  3434     05CD  00BB               	movwf	?___xxtofl+1
  3435     05CE  0844               	movf	___xxtofl@arg,w
  3436     05CF  00BA               	movwf	?___xxtofl
  3437     05D0                     l722:
  3438     05D0  0008               	return
  3439     05D1                     __end_of___xxtofl:
  3440                           
  3441                           	psect	text16
  3442     0404                     __ptext16:	
  3443 ;; *************** function ___fltol *****************
  3444 ;; Defined at:
  3445 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  f1              4    0[COMMON] unsigned char 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  exp1            1    9[COMMON] unsigned char 
  3450 ;;  sign1           1    8[COMMON] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  4    0[COMMON] long 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         4       0       0       0       0
  3461 ;;      Locals:         2       0       0       0       0
  3462 ;;      Temps:          4       0       0       0       0
  3463 ;;      Totals:        10       0       0       0       0
  3464 ;;Total ram usage:       10 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     0404                     ___fltol:	
  3474                           ;psect for function ___fltol
  3475                           
  3476     0404                     l1729:	
  3477                           ;incstack = 0
  3478                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3479                           
  3480     0404  1003               	clrc
  3481     0405  0D72               	rlf	___fltol@f1+2,w
  3482     0406  0D73               	rlf	___fltol@f1+3,w
  3483     0407  00F9               	movwf	___fltol@exp1
  3484     0408  0879               	movf	___fltol@exp1,w
  3485     0409  1D03               	btfss	3,2
  3486     040A  2C0C               	goto	u1571
  3487     040B  2C0D               	goto	u1570
  3488     040C                     u1571:
  3489     040C  2C16               	goto	l1735
  3490     040D                     u1570:
  3491     040D                     l1731:
  3492     040D  3000               	movlw	0
  3493     040E  00F3               	movwf	?___fltol+3
  3494     040F  3000               	movlw	0
  3495     0410  00F2               	movwf	?___fltol+2
  3496     0411  3000               	movlw	0
  3497     0412  00F1               	movwf	?___fltol+1
  3498     0413  3000               	movlw	0
  3499     0414  00F0               	movwf	?___fltol
  3500     0415  2C79               	goto	l473
  3501     0416                     l1735:
  3502     0416  0870               	movf	___fltol@f1,w
  3503     0417  00F4               	movwf	??___fltol
  3504     0418  0871               	movf	___fltol@f1+1,w
  3505     0419  00F5               	movwf	??___fltol+1
  3506     041A  0872               	movf	___fltol@f1+2,w
  3507     041B  00F6               	movwf	??___fltol+2
  3508     041C  0873               	movf	___fltol@f1+3,w
  3509     041D  00F7               	movwf	??___fltol+3
  3510     041E  301F               	movlw	31
  3511     041F                     u1585:
  3512     041F  1003               	clrc
  3513     0420  0CF7               	rrf	??___fltol+3,f
  3514     0421  0CF6               	rrf	??___fltol+2,f
  3515     0422  0CF5               	rrf	??___fltol+1,f
  3516     0423  0CF4               	rrf	??___fltol,f
  3517     0424                     u1580:
  3518     0424  3EFF               	addlw	-1
  3519     0425  1D03               	skipz
  3520     0426  2C1F               	goto	u1585
  3521     0427  0874               	movf	??___fltol,w
  3522     0428  00F8               	movwf	___fltol@sign1
  3523     0429                     l1737:
  3524     0429  17F2               	bsf	___fltol@f1+2,7
  3525     042A                     l1739:
  3526     042A  30FF               	movlw	255
  3527     042B  05F0               	andwf	___fltol@f1,f
  3528     042C  30FF               	movlw	255
  3529     042D  05F1               	andwf	___fltol@f1+1,f
  3530     042E  30FF               	movlw	255
  3531     042F  05F2               	andwf	___fltol@f1+2,f
  3532     0430  3000               	movlw	0
  3533     0431  05F3               	andwf	___fltol@f1+3,f
  3534     0432                     l1741:
  3535     0432  3096               	movlw	150
  3536     0433  02F9               	subwf	___fltol@exp1,f
  3537     0434                     l1743:
  3538     0434  1FF9               	btfss	___fltol@exp1,7
  3539     0435  2C37               	goto	u1591
  3540     0436  2C38               	goto	u1590
  3541     0437                     u1591:
  3542     0437  2C52               	goto	l1753
  3543     0438                     u1590:
  3544     0438                     l1745:
  3545     0438  0879               	movf	___fltol@exp1,w
  3546     0439  3A80               	xorlw	128
  3547     043A  3E97               	addlw	151
  3548     043B  1803               	skipnc
  3549     043C  2C3E               	goto	u1601
  3550     043D  2C3F               	goto	u1600
  3551     043E                     u1601:
  3552     043E  2C40               	goto	l1751
  3553     043F                     u1600:
  3554     043F  2C0D               	goto	l1731
  3555     0440                     l1751:
  3556     0440  3001               	movlw	1
  3557     0441                     u1615:
  3558     0441  1003               	clrc
  3559     0442  0CF3               	rrf	___fltol@f1+3,f
  3560     0443  0CF2               	rrf	___fltol@f1+2,f
  3561     0444  0CF1               	rrf	___fltol@f1+1,f
  3562     0445  0CF0               	rrf	___fltol@f1,f
  3563     0446  3EFF               	addlw	-1
  3564     0447  1D03               	skipz
  3565     0448  2C41               	goto	u1615
  3566     0449  3001               	movlw	1
  3567     044A  00F4               	movwf	??___fltol
  3568     044B  0874               	movf	??___fltol,w
  3569     044C  07F9               	addwf	___fltol@exp1,f
  3570     044D  1D03               	btfss	3,2
  3571     044E  2C50               	goto	u1621
  3572     044F  2C51               	goto	u1620
  3573     0450                     u1621:
  3574     0450  2C40               	goto	l1751
  3575     0451                     u1620:
  3576     0451  2C69               	goto	l1761
  3577     0452                     l1753:
  3578     0452  3020               	movlw	32
  3579     0453  0279               	subwf	___fltol@exp1,w
  3580     0454  1C03               	skipc
  3581     0455  2C57               	goto	u1631
  3582     0456  2C58               	goto	u1630
  3583     0457                     u1631:
  3584     0457  2C64               	goto	l480
  3585     0458                     u1630:
  3586     0458  2C0D               	goto	l1731
  3587     0459                     l1759:
  3588     0459  3001               	movlw	1
  3589     045A  00F4               	movwf	??___fltol
  3590     045B                     u1645:
  3591     045B  1003               	clrc
  3592     045C  0DF0               	rlf	___fltol@f1,f
  3593     045D  0DF1               	rlf	___fltol@f1+1,f
  3594     045E  0DF2               	rlf	___fltol@f1+2,f
  3595     045F  0DF3               	rlf	___fltol@f1+3,f
  3596     0460  0BF4               	decfsz	??___fltol,f
  3597     0461  2C5B               	goto	u1645
  3598     0462  3001               	movlw	1
  3599     0463  02F9               	subwf	___fltol@exp1,f
  3600     0464                     l480:
  3601     0464  0879               	movf	___fltol@exp1,w
  3602     0465  1D03               	btfss	3,2
  3603     0466  2C68               	goto	u1651
  3604     0467  2C69               	goto	u1650
  3605     0468                     u1651:
  3606     0468  2C59               	goto	l1759
  3607     0469                     u1650:
  3608     0469                     l1761:
  3609     0469  0878               	movf	___fltol@sign1,w
  3610     046A  1903               	btfsc	3,2
  3611     046B  2C6D               	goto	u1661
  3612     046C  2C6E               	goto	u1660
  3613     046D                     u1661:
  3614     046D  2C79               	goto	l483
  3615     046E                     u1660:
  3616     046E                     l1763:
  3617     046E  09F0               	comf	___fltol@f1,f
  3618     046F  09F1               	comf	___fltol@f1+1,f
  3619     0470  09F2               	comf	___fltol@f1+2,f
  3620     0471  09F3               	comf	___fltol@f1+3,f
  3621     0472  0AF0               	incf	___fltol@f1,f
  3622     0473  1903               	skipnz
  3623     0474  0AF1               	incf	___fltol@f1+1,f
  3624     0475  1903               	skipnz
  3625     0476  0AF2               	incf	___fltol@f1+2,f
  3626     0477  1903               	skipnz
  3627     0478  0AF3               	incf	___fltol@f1+3,f
  3628     0479                     l483:
  3629     0479                     l473:
  3630     0479  0008               	return
  3631     047A                     __end_of___fltol:
  3632                           
  3633                           	psect	text17
  3634     00E7                     __ptext17:	
  3635 ;; *************** function _Lcd8_Write_String *****************
  3636 ;; Defined at:
  3637 ;;		line 65 in file "LCD8.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  a               1    wreg     PTR unsigned char 
  3640 ;;		 -> STR_3(2), STR_2(2), STR_1(12), 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  a               1    4[COMMON] PTR unsigned char 
  3643 ;;		 -> STR_3(2), STR_2(2), STR_1(12), 
  3644 ;;  i               1    3[COMMON] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         2       0       0       0       0
  3656 ;;      Temps:          1       0       0       0       0
  3657 ;;      Totals:         3       0       0       0       0
  3658 ;;Total ram usage:        3 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 1
  3661 ;; This function calls:
  3662 ;;		_Lcd8_Write_Char
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668     00E7                     _Lcd8_Write_String:	
  3669                           ;psect for function _Lcd8_Write_String
  3670                           
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3674                           ;Lcd8_Write_String@a stored from wreg
  3675     00E7  00F4               	movwf	Lcd8_Write_String@a
  3676     00E8                     l1605:
  3677                           
  3678                           ;LCD8.c: 66:     char i;;LCD8.c: 67:     for (i = 0; a[i] != '\0'; i++)
  3679     00E8  01F3               	clrf	Lcd8_Write_String@i
  3680     00E9  28FB               	goto	l1611
  3681     00EA                     l1607:
  3682                           
  3683                           ;LCD8.c: 68:         Lcd8_Write_Char(a[i]);
  3684     00EA  0873               	movf	Lcd8_Write_String@i,w
  3685     00EB  0774               	addwf	Lcd8_Write_String@a,w
  3686     00EC  0084               	movwf	4
  3687     00ED  120A  118A  2003  120A  118A  	fcall	stringdir
  3688     00F2  120A  118A  208E  120A  118A  	fcall	_Lcd8_Write_Char
  3689     00F7                     l1609:
  3690     00F7  3001               	movlw	1
  3691     00F8  00F2               	movwf	??_Lcd8_Write_String
  3692     00F9  0872               	movf	??_Lcd8_Write_String,w
  3693     00FA  07F3               	addwf	Lcd8_Write_String@i,f
  3694     00FB                     l1611:
  3695     00FB  0873               	movf	Lcd8_Write_String@i,w
  3696     00FC  0774               	addwf	Lcd8_Write_String@a,w
  3697     00FD  0084               	movwf	4
  3698     00FE  120A  118A  2003  120A  118A  	fcall	stringdir
  3699     0103  3A00               	xorlw	0
  3700     0104  1D03               	skipz
  3701     0105  2907               	goto	u1431
  3702     0106  2908               	goto	u1430
  3703     0107                     u1431:
  3704     0107  28EA               	goto	l1607
  3705     0108                     u1430:
  3706     0108                     l195:
  3707     0108  0008               	return
  3708     0109                     __end_of_Lcd8_Write_String:
  3709                           
  3710                           	psect	text18
  3711     008E                     __ptext18:	
  3712 ;; *************** function _Lcd8_Write_Char *****************
  3713 ;; Defined at:
  3714 ;;		line 55 in file "LCD8.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  a               1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  a               1    1[COMMON] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0
  3730 ;;      Temps:          1       0       0       0       0
  3731 ;;      Totals:         2       0       0       0       0
  3732 ;;Total ram usage:        2 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;;		_Lcd8_Write_String
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742     008E                     _Lcd8_Write_Char:	
  3743                           ;psect for function _Lcd8_Write_Char
  3744                           
  3745                           
  3746                           ;incstack = 0
  3747                           ; Regs used in _Lcd8_Write_Char: [wreg]
  3748                           ;Lcd8_Write_Char@a stored from wreg
  3749     008E  00F1               	movwf	Lcd8_Write_Char@a
  3750     008F                     l1339:
  3751                           
  3752                           ;LCD8.c: 57:     RC0 = 1;
  3753     008F  1283               	bcf	3,5	;RP0=0, select bank0
  3754     0090  1303               	bcf	3,6	;RP1=0, select bank0
  3755     0091  1407               	bsf	7,0	;volatile
  3756     0092                     l1341:
  3757                           
  3758                           ;LCD8.c: 58:     PORTD = a;
  3759     0092  0871               	movf	Lcd8_Write_Char@a,w
  3760     0093  0088               	movwf	8	;volatile
  3761     0094                     l1343:
  3762                           
  3763                           ;LCD8.c: 59:     RC1 = 1;
  3764     0094  1487               	bsf	7,1	;volatile
  3765                           
  3766                           ;LCD8.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3767     0095  300D               	movlw	13
  3768     0096  00F0               	movwf	??_Lcd8_Write_Char
  3769     0097                     u1867:
  3770     0097  0BF0               	decfsz	??_Lcd8_Write_Char,f
  3771     0098  2897               	goto	u1867
  3772     0099                     l1345:
  3773                           
  3774                           ;LCD8.c: 61:     RC1 = 0;
  3775     0099  1283               	bcf	3,5	;RP0=0, select bank0
  3776     009A  1303               	bcf	3,6	;RP1=0, select bank0
  3777     009B  1087               	bcf	7,1	;volatile
  3778     009C                     l189:
  3779     009C  0008               	return
  3780     009D                     __end_of_Lcd8_Write_Char:
  3781                           
  3782                           	psect	text19
  3783     00C7                     __ptext19:	
  3784 ;; *************** function _Lcd8_Set_Cursor *****************
  3785 ;; Defined at:
  3786 ;;		line 24 in file "LCD8.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  a               1    wreg     unsigned char 
  3789 ;;  b               1    3[COMMON] unsigned char 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  a               1    4[COMMON] unsigned char 
  3792 ;;  x               1    5[COMMON] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, pclath, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         1       0       0       0       0
  3803 ;;      Locals:         2       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0
  3805 ;;      Totals:         3       0       0       0       0
  3806 ;;Total ram usage:        3 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 1
  3809 ;; This function calls:
  3810 ;;		_Lcd8_Cmd
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816     00C7                     _Lcd8_Set_Cursor:	
  3817                           ;psect for function _Lcd8_Set_Cursor
  3818                           
  3819                           
  3820                           ;incstack = 0
  3821                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3822                           ;Lcd8_Set_Cursor@a stored from wreg
  3823     00C7  00F4               	movwf	Lcd8_Set_Cursor@a
  3824     00C8                     l1593:
  3825                           
  3826                           ;LCD8.c: 24: void Lcd8_Set_Cursor(char a, char b);LCD8.c: 25: {;LCD8.c: 26:     char x;;
      +                          LCD8.c: 27:     if (a == 1) {
  3827     00C8  0374               	decf	Lcd8_Set_Cursor@a,w
  3828     00C9  1D03               	btfss	3,2
  3829     00CA  28CC               	goto	u1411
  3830     00CB  28CD               	goto	u1410
  3831     00CC                     u1411:
  3832     00CC  28D7               	goto	l1599
  3833     00CD                     u1410:
  3834     00CD                     l1595:
  3835                           
  3836                           ;LCD8.c: 29:         x = 0x80 + b - 1;
  3837     00CD  0873               	movf	Lcd8_Set_Cursor@b,w
  3838     00CE  3E7F               	addlw	127
  3839     00CF  00F5               	movwf	Lcd8_Set_Cursor@x
  3840     00D0                     l1597:
  3841                           
  3842                           ;LCD8.c: 30:         Lcd8_Cmd(x);
  3843     00D0  0875               	movf	Lcd8_Set_Cursor@x,w
  3844     00D1  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3845                           
  3846                           ;LCD8.c: 31:     }
  3847     00D6  28E6               	goto	l183
  3848     00D7                     l1599:
  3849     00D7  3002               	movlw	2
  3850     00D8  0674               	xorwf	Lcd8_Set_Cursor@a,w
  3851     00D9  1D03               	btfss	3,2
  3852     00DA  28DC               	goto	u1421
  3853     00DB  28DD               	goto	u1420
  3854     00DC                     u1421:
  3855     00DC  28E6               	goto	l183
  3856     00DD                     u1420:
  3857     00DD                     l1601:
  3858                           
  3859                           ;LCD8.c: 34:         x = 0xC0 + b - 1;
  3860     00DD  0873               	movf	Lcd8_Set_Cursor@b,w
  3861     00DE  3EBF               	addlw	191
  3862     00DF  00F5               	movwf	Lcd8_Set_Cursor@x
  3863     00E0                     l1603:
  3864                           
  3865                           ;LCD8.c: 35:         Lcd8_Cmd(x);
  3866     00E0  0875               	movf	Lcd8_Set_Cursor@x,w
  3867     00E1  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3868     00E6                     l183:
  3869     00E6  0008               	return
  3870     00E7                     __end_of_Lcd8_Set_Cursor:
  3871                           
  3872                           	psect	text20
  3873     0293                     __ptext20:	
  3874 ;; *************** function _Lcd8_Init *****************
  3875 ;; Defined at:
  3876 ;;		line 39 in file "LCD8.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0
  3892 ;;      Temps:          2       0       0       0       0
  3893 ;;      Totals:         2       0       0       0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		_Lcd8_Cmd
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904     0293                     _Lcd8_Init:	
  3905                           ;psect for function _Lcd8_Init
  3906                           
  3907     0293                     l1551:	
  3908                           ;incstack = 0
  3909                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  3910                           
  3911                           
  3912                           ;LCD8.c: 41:     Lcd8_Cmd(0x00);
  3913     0293  3000               	movlw	0
  3914     0294  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3915     0299                     l1553:
  3916                           
  3917                           ;LCD8.c: 42:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3918     0299  301A               	movlw	26
  3919     029A  00F4               	movwf	??_Lcd8_Init+1
  3920     029B  30F8               	movlw	248
  3921     029C  00F3               	movwf	??_Lcd8_Init
  3922     029D                     u1877:
  3923     029D  0BF3               	decfsz	??_Lcd8_Init,f
  3924     029E  2A9D               	goto	u1877
  3925     029F  0BF4               	decfsz	??_Lcd8_Init+1,f
  3926     02A0  2A9D               	goto	u1877
  3927     02A1  0000               	nop
  3928     02A2                     l1555:
  3929                           
  3930                           ;LCD8.c: 43:     Lcd8_Cmd(0x30);
  3931     02A2  3030               	movlw	48
  3932     02A3  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3933                           
  3934                           ;LCD8.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3935     02A8  3007               	movlw	7
  3936     02A9  00F4               	movwf	??_Lcd8_Init+1
  3937     02AA  307D               	movlw	125
  3938     02AB  00F3               	movwf	??_Lcd8_Init
  3939     02AC                     u1887:
  3940     02AC  0BF3               	decfsz	??_Lcd8_Init,f
  3941     02AD  2AAC               	goto	u1887
  3942     02AE  0BF4               	decfsz	??_Lcd8_Init+1,f
  3943     02AF  2AAC               	goto	u1887
  3944     02B0                     l1557:
  3945                           
  3946                           ;LCD8.c: 45:     Lcd8_Cmd(0x30);
  3947     02B0  3030               	movlw	48
  3948     02B1  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3949     02B6                     l1559:
  3950                           
  3951                           ;LCD8.c: 46:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3952     02B6  300D               	movlw	13
  3953     02B7  00F4               	movwf	??_Lcd8_Init+1
  3954     02B8  30FB               	movlw	251
  3955     02B9  00F3               	movwf	??_Lcd8_Init
  3956     02BA                     u1897:
  3957     02BA  0BF3               	decfsz	??_Lcd8_Init,f
  3958     02BB  2ABA               	goto	u1897
  3959     02BC  0BF4               	decfsz	??_Lcd8_Init+1,f
  3960     02BD  2ABA               	goto	u1897
  3961     02BE  2ABF               	nop2
  3962                           
  3963                           ;LCD8.c: 47:     Lcd8_Cmd(0x30);
  3964     02BF  3030               	movlw	48
  3965     02C0  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3966     02C5                     l1561:
  3967                           
  3968                           ;LCD8.c: 48:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3969     02C5  30C7               	movlw	199
  3970     02C6  00F3               	movwf	??_Lcd8_Init
  3971     02C7                     u1907:
  3972     02C7  2AC8               	nop2
  3973     02C8  0BF3               	decfsz	??_Lcd8_Init,f
  3974     02C9  2AC7               	goto	u1907
  3975     02CA  2ACB               	nop2
  3976     02CB  2ACC               	nop2
  3977     02CC                     l1563:
  3978                           
  3979                           ;LCD8.c: 49:     Lcd8_Cmd(0x38);
  3980     02CC  3038               	movlw	56
  3981     02CD  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3982     02D2                     l1565:
  3983                           
  3984                           ;LCD8.c: 50:     Lcd8_Cmd(0x0C);
  3985     02D2  300C               	movlw	12
  3986     02D3  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3987     02D8                     l1567:
  3988                           
  3989                           ;LCD8.c: 51:     Lcd8_Cmd(0x01);
  3990     02D8  3001               	movlw	1
  3991     02D9  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3992     02DE                     l1569:
  3993                           
  3994                           ;LCD8.c: 52:     Lcd8_Cmd(0x06);
  3995     02DE  3006               	movlw	6
  3996     02DF  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  3997     02E4                     l186:
  3998     02E4  0008               	return
  3999     02E5                     __end_of_Lcd8_Init:
  4000                           
  4001                           	psect	text21
  4002     0081                     __ptext21:	
  4003 ;; *************** function _Lcd8_Clear *****************
  4004 ;; Defined at:
  4005 ;;		line 19 in file "LCD8.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0
  4022 ;;      Totals:         0       0       0       0       0
  4023 ;;Total ram usage:        0 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 1
  4026 ;; This function calls:
  4027 ;;		_Lcd8_Cmd
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033     0081                     _Lcd8_Clear:	
  4034                           ;psect for function _Lcd8_Clear
  4035                           
  4036     0081                     l1571:	
  4037                           ;incstack = 0
  4038                           ; Regs used in _Lcd8_Clear: [wreg+status,2+status,0+pclath+cstack]
  4039                           
  4040                           
  4041                           ;LCD8.c: 20:     Lcd8_Cmd(0);
  4042     0081  3000               	movlw	0
  4043     0082  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  4044                           
  4045                           ;LCD8.c: 21:     Lcd8_Cmd(1);
  4046     0087  3001               	movlw	1
  4047     0088  120A  118A  209D  120A  118A  	fcall	_Lcd8_Cmd
  4048     008D                     l177:
  4049     008D  0008               	return
  4050     008E                     __end_of_Lcd8_Clear:
  4051                           
  4052                           	psect	text22
  4053     009D                     __ptext22:	
  4054 ;; *************** function _Lcd8_Cmd *****************
  4055 ;; Defined at:
  4056 ;;		line 9 in file "LCD8.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  a               1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  a               1    2[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0
  4072 ;;      Temps:          2       0       0       0       0
  4073 ;;      Totals:         3       0       0       0       0
  4074 ;;Total ram usage:        3 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_Lcd8_Clear
  4080 ;;		_Lcd8_Set_Cursor
  4081 ;;		_Lcd8_Init
  4082 ;;		_Lcd8_Shift_Right
  4083 ;;		_Lcd8_Shift_Left
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087     009D                     _Lcd8_Cmd:	
  4088                           ;psect for function _Lcd8_Cmd
  4089                           
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _Lcd8_Cmd: [wreg]
  4093                           ;Lcd8_Cmd@a stored from wreg
  4094     009D  00F2               	movwf	Lcd8_Cmd@a
  4095     009E                     l1359:
  4096                           
  4097                           ;LCD8.c: 9: void Lcd8_Cmd(char a);LCD8.c: 10: {;LCD8.c: 11:     RC0 = 0;
  4098     009E  1283               	bcf	3,5	;RP0=0, select bank0
  4099     009F  1303               	bcf	3,6	;RP1=0, select bank0
  4100     00A0  1007               	bcf	7,0	;volatile
  4101     00A1                     l1361:
  4102                           
  4103                           ;LCD8.c: 12:     PORTD = a;
  4104     00A1  0872               	movf	Lcd8_Cmd@a,w
  4105     00A2  0088               	movwf	8	;volatile
  4106     00A3                     l1363:
  4107                           
  4108                           ;LCD8.c: 13:     RC1 = 1;
  4109     00A3  1487               	bsf	7,1	;volatile
  4110                           
  4111                           ;LCD8.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4112     00A4  3006               	movlw	6
  4113     00A5  00F1               	movwf	??_Lcd8_Cmd+1
  4114     00A6  3030               	movlw	48
  4115     00A7  00F0               	movwf	??_Lcd8_Cmd
  4116     00A8                     u1917:
  4117     00A8  0BF0               	decfsz	??_Lcd8_Cmd,f
  4118     00A9  28A8               	goto	u1917
  4119     00AA  0BF1               	decfsz	??_Lcd8_Cmd+1,f
  4120     00AB  28A8               	goto	u1917
  4121     00AC  0000               	nop
  4122     00AD                     l1365:
  4123                           
  4124                           ;LCD8.c: 15:     RC1 = 0;
  4125     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  4126     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  4127     00AF  1087               	bcf	7,1	;volatile
  4128     00B0                     l174:
  4129     00B0  0008               	return
  4130     00B1                     __end_of_Lcd8_Cmd:
  4131     007E                     btemp	set	126	;btemp
  4132     007E                     wtemp0	set	126
  4133                           
  4134                           	psect	idloc
  4135                           
  4136                           ;Config register IDLOC0 @ 0x2000
  4137                           ;	unspecified, using default values
  4138     2000                     	org	8192
  4139     2000  3FFF               	dw	16383
  4140                           
  4141                           ;Config register IDLOC1 @ 0x2001
  4142                           ;	unspecified, using default values
  4143     2001                     	org	8193
  4144     2001  3FFF               	dw	16383
  4145                           
  4146                           ;Config register IDLOC2 @ 0x2002
  4147                           ;	unspecified, using default values
  4148     2002                     	org	8194
  4149     2002  3FFF               	dw	16383
  4150                           
  4151                           ;Config register IDLOC3 @ 0x2003
  4152                           ;	unspecified, using default values
  4153     2003                     	org	8195
  4154     2003  3FFF               	dw	16383
  4155                           
  4156                           	psect	config
  4157                           
  4158                           ;Config register CONFIG1 @ 0x2007
  4159                           ;	Oscillator Selection bits
  4160                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4161                           ;	Watchdog Timer Enable bit
  4162                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4163                           ;	Power-up Timer Enable bit
  4164                           ;	PWRTE = OFF, PWRT disabled
  4165                           ;	RE3/MCLR pin function select bit
  4166                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4167                           ;	Code Protection bit
  4168                           ;	CP = OFF, Program memory code protection is disabled
  4169                           ;	Data Code Protection bit
  4170                           ;	CPD = OFF, Data memory code protection is disabled
  4171                           ;	Brown Out Reset Selection bits
  4172                           ;	BOREN = OFF, BOR disabled
  4173                           ;	Internal External Switchover bit
  4174                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4175                           ;	Fail-Safe Clock Monitor Enabled bit
  4176                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4177                           ;	Low Voltage Programming Enable bit
  4178                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4179                           ;	In-Circuit Debugger Mode bit
  4180                           ;	DEBUG = 0x1, unprogramme  4181     2007                     	org	8199
  4182     2007  20D4               	dw	8404
  4183                           
  4184                           ;Config register CONFIG2 @ 0x2008
  4185                           ;	Brown-out Reset Selection bit
  4186                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4187                           ;	Flash Program Memory Self Write Enable bits
  4188                           ;	WRT = OFF, Write protection off
  4189     2008                     	org	8200
  4190     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd8_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_deshacer
    _portconfi->_spiInit
    _map->___aldiv
    ___aldiv->___lmul
    _deshacer->___fltol
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Clear->_Lcd8_Cmd

Critical Paths under _main in BANK0

    _main->___xxtofl
    _map->___aldiv
    ___xxtofl->_map

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6975
                                             40 BANK0      4     4      0
                         _Lcd8_Clear
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                    _Lcd8_Write_Char
                  _Lcd8_Write_String
                            ___fltol
                           ___xxtofl
                           _deshacer
                           _intachar
                                _map
                          _portconfi
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _portconfi                                            0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _map                                                 12     7      5    1459
                                             14 BANK0     12     7      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _intachar                                             1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deshacer                                             9     5      4    2638
                                             10 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             26 BANK0     14    10      4
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     685
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    3     3      0     211
                                              2 COMMON     3     3      0
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      3     2      1     840
                                              3 COMMON     3     2      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0      22
                                              3 COMMON     2     2      0
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Clear                                           0     0      0      22
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Clear
     _Lcd8_Cmd
   _Lcd8_Init
     _Lcd8_Cmd
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
   _Lcd8_Write_Char
   _Lcd8_Write_String
     _Lcd8_Write_Char
   ___fltol
   ___xxtofl
     _map (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _deshacer
     ___awdiv
     ___awmod
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _intachar
   _map
   _portconfi
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 08 23:35:19 2023

                        _u 0050                          pc 0002                _SSPSTATbits 0094  
                       l82 0604                         l93 0137                         l85 06FB  
                       l88 07E9                         l97 0292               ___awdiv@sign 0076  
                       _ce 0054                         _de 0052                         fsr 0004  
                      l110 0292                        l301 01FB                        l126 0242  
                      l142 00C1                        l119 039C                        l143 00C6  
                      l160 0080                        l152 0070                        l146 0071  
                      l149 0077                        l174 00B0                        l183 00E6  
                      l440 0403                        l352 048E                        l177 008D  
                      l186 02E4                        l362 0516                        l195 0108  
                      l189 009C                        l453 033D                        l480 0464  
                      l720 053B                        l473 0479                        l722 05D0  
                      l483 0479                        l733 059A                        l734 05A6  
                      l726 057E                        l559 01B5                        l569 0171  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _RC6 003E                        u920 00B9                        u921 00B8  
                      u930 0077                        u931 0076                        u940 01C2  
                      u941 01C1                        u951 01CB                        u952 01D2  
                      u953 01D9                        u980 01F3                        u981 01F2  
                      u965 01DB                        u990 0481                        u991 0480  
                      u975 01E3                        _map 01FC                        fsr0 0004  
             ___awmod@sign 0076                 _Lcd8_Clear 0081               map@resultado 0037  
             ___fltol@exp1 0079                       l1401 04C5                       l1411 04F8  
                     l1403 04CE                       l1341 0092                       l1421 039D  
                     l1405 04E0                       l1413 04FE                       l1343 0094  
                     l1431 03AD                       l1423 039E                       l1511 0184  
                     l1503 0172                       l1415 0503                       l1407 04EE  
                     l1351 00BB                       l1361 00A1                       l1601 00DD  
                     l1345 0099                       l1441 03C1                       l1433 03B2  
                     l1425 03A2                       l1521 01A4                       l1513 0188  
                     l1505 0174                       l1417 050E                       l1409 04EF  
                     l1353 00BD                       l1363 00A3                       l1603 00E0  
                     l1339 008F                       l1611 00FB                       l1451 03E7  
                     l1443 03C8                       l1435 03B6                       l1427 03A7  
                     l1523 01AB                       l1515 018C                       l1507 017A  
                     l1531 013E                       l1371 01C2                       l1355 00C0  
                     l1347 00B2                       l1365 00AD                       l1605 00E8  
                     l1461 03FF                       l1453 03E8                       l1445 03CC  
                     l1437 03B8                       l1429 03A9                       l1517 019D  
                     l1509 017D                       l1525 01B1                       l1541 015A  
                     l1533 0141                       l1701 0278                       l1381 047A  
                     l1373 01D9                       l1621 01FF                       l1349 00B9  
                     l1357 0071                       l1613 006C                       l1359 009E  
                     l1551 0293                       l1607 00EA                       l1455 03EF  
                     l1447 03D0                       l1439 03BE                       l1471 02EF  
                     l1519 01A3                       l1543 0160                       l1535 0148  
                     l1631 037B                       l1391 04A1                       l1383 047D  
                     l1375 01E2                       l1367 01B6                       l1623 023E  
                     l1615 0078                       l1561 02C5                       l1553 0299  
                     l1609 00F7                       l1801 05C3                       l1449 03E1  
                     l1457 03F5                       l1481 0303                       l1473 02F1  
                     l1465 02E5                       l1545 0167                       l1537 014C  
                     l1529 0138                       l1393 04A9                       l1385 0481  
                     l1377 01F3                       l1369 01BE                       l1617 007D  
                     l1571 0081                       l1563 02CC                       l1555 02A2  
                     l1731 040D                       l1803 05C7                       l1459 03FA  
                     l1491 0322                       l1483 030A                       l1475 02F5  
                     l1467 02E6                       l1539 0150                       l1547 016D  
                     l1627 033E                       l1723 028A                       l1715 0282  
                     l1707 027A                       l1651 0244                       l1395 04B1  
                     l1387 0492                       l1811 05D4                       l1565 02D2  
                     l1557 02B0                       l1741 0432                       l1805 05C8  
                     l1493 0329                       l1485 030E                       l1477 02FA  
                     l1469 02EA                       l1645 0395                       l1637 037D  
                     l1629 0374                       l1725 0290                       l1717 0288  
                     l1709 0280                       l1661 0250                       l1653 0249  
                     l1397 04B4                       l1389 049D                       l1581 011C  
                     l1573 0109                       l1821 05F1                       l1813 05D9  
                     l1567 02D8                       l1559 02B6                       l1751 0440  
                     l1743 0434                       l1735 0416                       l1487 0312  
                     l1479 0300                       l1495 032F                       l1647 039B  
                     l1639 0383                       l1399 04C1                       l1591 012E  
                     l1583 0120                       l1575 0119                       l1831 067B  
                     l1823 05FB                       l1815 05DE                       l1569 02DE  
                     l1593 00C8                       l1761 0469                       l1745 0438  
                     l1753 0452                       l1737 0429                       l1729 0404  
                     l1497 0334                       l1489 031C                       l1585 0122  
                     l1577 011A                       l1841 06D8                       l1833 0681  
                     l1825 05FE                       l1817 05E3                       l1809 05D1  
                     l1595 00CD                       l1763 046E                       l1739 042A  
                     l1771 0533                       l1499 0339                       l1691 026A  
                     l1683 0262                       l1675 025A                       l1667 0252  
                     l1659 024B                       l1587 012A                       l1579 011B  
                     l1851 0701                       l1843 06E0                       l1835 06A5  
                     l1827 060A                       l1819 05EB                       l1597 00D0  
                     l1781 055C                       l1773 0543                       l1765 051A  
                     l1693 0270                       l1685 0268                       l1677 0260  
                     l1669 0258                       l1589 012D                       l1861 07A4  
                     l1853 0709                       l1845 06E8                       l1837 06AD  
                     l1829 0612                       l1599 00D7                       l1759 0459  
                     l1791 0590                       l1783 0563                       l1767 051F  
                     l1863 07AC                       l1855 0772                       l1847 06F2  
                     l1839 06B5                       l1793 0594                       l1785 0567  
                     l1777 054C                       l1769 0523                       l1865 07CF  
                     l1857 0778                       l1849 06F5                       l1795 059E  
                     l1787 0575                       l1779 054F                       l1699 0272  
                     l1867 07D7                       l1859 079C                       l1797 05A8  
                     l1789 0585                       l1869 07DF                       ?_map 002E  
                     l1799 05BE                       STR_1 0009                       STR_2 0015  
                     STR_3 0015                       u1000 0492                       u1001 0491  
                     u1010 04B1                       u1011 04B0                       u1100 03AD  
                     u1101 03AC                       u1110 03BE                       u1030 04C5  
                     u1111 03BD                       u1031 04C4                       u1200 02F5  
                     u1201 02F4                       u1025 04B6                       u1130 03D0  
                     u1210 0300                       u1050 04E0                       u1131 03CF  
                     u1211 02FF                       u1051 04DF                       u1300 018C  
                     u1125 03C2                       u1301 018B                       u1045 04C7  
                     u1150 03E1                       u1230 0312                       u1070 04FE  
                     u1151 03E0                       u1231 0311                       u1071 04FD  
                     u1055 04DC                       u1240 031C                       u1320 019D  
                     u1400 016D                       u1080 0503                       u1145 03D1  
                     u1241 031B                       u1225 0304                       u1321 019C  
                     u1401 016C                       u1081 0502                       u1065 04F0  
                     u1410 00CD                       u1170 03F5                       u1090 03A2  
                     u1411 00CC                       u1171 03F4                       u1155 03DD  
                     u1091 03A1                       u1315 018D                       u1420 00DD  
                     u1180 03FA                       u1260 032F                       u1340 01B1  
                     u1500 0260                       _IOCB 0096                       u1421 00DC  
                     u1181 03F9                       u1165 03E9                       u1261 032E  
                     u1245 0318                       u1341 01B0                       u1325 0199  
                     u1501 025F                       u1430 0108                       u1270 0334  
                     u1190 02EA                       u1350 013E                       u1510 0268  
                     u1431 0107                       u1271 0333                       u1255 0323  
                     u1191 02E9                       u1335 01A5                       u1351 013D  
                     u1511 0267                       u1600 043F                       u1280 017A  
                     u1440 037B                       u1520 0270                       u1601 043E  
                     u1281 0179                       u1441 037A                       u1521 026F  
                     u1370 0150                       u1450 0383                       u1530 0278  
                     u1371 014F                       u1451 0382                       u1531 0277  
                     u1620 0451                       u1380 015A                       u1460 039B  
                     u1540 0280                       u1621 0450                       u1381 0159  
                     u1365 0142                       u1461 039A                       u1541 027F  
                     u1630 0458                       u1710 0562                       u1550 0288  
                     u1470 0249                       u1631 0457                       u1615 0441  
                     u1711 0561                       u1295 017E                       u1551 0287  
                     u1471 0248                       u1800 05C7                       u1560 0290  
                     u1480 0250                       u1801 05C6                       u1705 0554  
                     u1385 0156                       u1561 028F                       u1481 024F  
                     u1650 0469                       u1570 040D                       u1730 0584  
                     u1490 0258                       u1810 060A                       u1651 0468  
                     u1571 040C                       u1731 0583                       u1395 0161  
                     u1491 0257                       u1811 0609                       u1660 046E  
                     u1580 0424                       u1820 0701                       u1661 046D  
                     u1645 045B                       u1725 0576                       u1821 0700  
                     u1590 0438                       u1750 0594                       u1670 051F  
                     u1591 0437                       u1751 0593                       u1671 051E  
                     u1760 059A                       u1680 0523                       u1585 041F  
                     u1761 0599                       u1745 0589                       u1681 0522  
                     u1770 059E                       u1690 0543                       u1907 02C7  
                     u1771 059D                       u1691 0542                       u1780 05B3  
                     u1917 00A8                       u1837 05F7                       u1790 05C3  
                     u1791 05C2                       u1847 06EE                       u1785 05AE  
                     u1857 07E5                       u1867 0097                       u1877 029D  
                     u1887 02AC                       u1897 02BA                       _WPUB 0095  
                     _vADC 004C                       _cent 0056                       _main 05D1  
        ??_Lcd8_Set_Cursor 0074                       _unid 0058                       map@v 0039  
                     btemp 007E                       start 0000                      ??_map 0033  
            ___fltol@sign1 0078            __end_of___aldiv 0517                      ?_main 0070  
          __end_of___awdiv 0404            __end_of___awmod 033E            __end_of___fltol 047A  
                    _ANSEL 0188            ___awdiv@divisor 0070            __end_of___lwdiv 01B6  
          __end_of___lwmod 0172            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
      ___lmul@multiplicand 0074                      _decen 0057                      _vaADC 0059  
                    pclath 000A            __end_of_spiInit 00C7            __end_of_spiRead 0081  
                    status 0003           __end_of_Lcd8_Cmd 00B1                      wtemp0 007E  
          __initialization 07EC               __end_of_main 07EC          ??_Lcd8_Write_Char 0070  
                   ??_main 0048                ?_Lcd8_Clear 0070           ___awdiv@dividend 0072  
                   _ANSELH 0189                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 05D1  
         __end_of_deshacer 039D                     ___lmul 01B6                  ??___aldiv 007D  
                ??___awdiv 0074                  ??___awmod 0074                  ??___fltol 0074  
                ??___lwdiv 0074                  ??___lwmod 0074           __end_of_intachar 0293  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
         __end_of_spiWrite 0071                  ??_spiInit 0073                  ??_spiRead 0070  
        __end_of_Lcd8_Init 02E5               ___xxtofl@arg 0044               ___xxtofl@exp 0043  
             ___xxtofl@val 003A    __end_of__initialization 07FC                 ___fltol@f1 0070  
           __pcstackCOMMON 0070                  ?_Lcd8_Cmd 0070             _OPTION_REGbits 0081  
          _Lcd8_Set_Cursor 00C7                 __pbssBANK0 004C                 __pmaintext 05D1  
                  ?___lmul 0070             ___lmul@product 0079           Lcd8_Set_Cursor@a 0074  
         Lcd8_Set_Cursor@b 0073           Lcd8_Set_Cursor@x 0075                 ??_Lcd8_Cmd 0070  
                ?___xxtofl 003A                  ?_deshacer 007A                    _SSPSTAT 0094  
               __stringtab 0003                  ?_intachar 0070            _Lcd8_Write_Char 008E  
                ?_spiWrite 0070                    ___aldiv 047A                    ___awdiv 039D  
                  ___awmod 02E5                    ___fltol 0404                    ___lwdiv 0172  
                  ___lwmod 0138    __end_of_Lcd8_Set_Cursor 00E7                    __ptext1 006B  
                  __ptext2 0078                    __ptext3 0071                    __ptext4 0109  
                  __ptext5 00B1                    __ptext6 01FC                    __ptext7 01B6  
                  __ptext8 047A                    __ptext9 0243                  Lcd8_Cmd@a 0072  
               ??___xxtofl 003E           ___awmod@dividend 0072           ___aldiv@dividend 0024  
                  _spiInit 00B1                    _spiRead 0078                 ??_deshacer 0020  
             ??_Lcd8_Clear 0073       end_of_initialization 07FC                 ??_intachar 0070  
        __end_of_portconfi 0138           ___aldiv@quotient 002A                 ??_spiWrite 0070  
       __end_of_Lcd8_Clear 008E                  _PORTCbits 0007              ___xxtofl@sign 0042  
  __end_of_Lcd8_Write_Char 009D                spiWrite@dat 0070                  _Lcd8_Init 0293  
           _spiReceiveWait 0071             __end_of___lmul 01FC           ?_Lcd8_Set_Cursor 0073  
      start_initialization 07EC                __end_of_map 0243          _Lcd8_Write_String 00E7  
       ?_Lcd8_Write_String 0070                 ?_Lcd8_Init 0070        ??_Lcd8_Write_String 0072  
   __end_of_spiReceiveWait 0078                   ??___lmul 0078                  ___latbits 0002  
            __pcstackBANK0 0020  __end_of_Lcd8_Write_String 0109           ?_Lcd8_Write_Char 0070  
         ___lwdiv@dividend 0072            ?_spiReceiveWait 0070                   ?___aldiv 0020  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___fltol 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070                  __pstrings 0003  
            deshacer@cente 0022                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 0075            ___aldiv@divisor 0020       spiInit@sTransmitEdge 0072  
          ___aldiv@counter 0028                ??_Lcd8_Init 0073           Lcd8_Write_Char@a 0071  
       spiInit@sDataSample 0070                  deshacer@p 007A                  _portconfi 0109  
              __stringbase 0008                   _Lcd8_Cmd 009D          ___lmul@multiplier 0070  
                intachar@n 0070                 ?_portconfi 0070         __end_of__stringtab 0009  
                 ___xxtofl 0517            ___lwdiv@divisor 0070                   _deshacer 033E  
          ___lwdiv@counter 0077                   __ptext10 033E                   __ptext11 0138  
                 __ptext20 0293                   __ptext12 0172                   __ptext21 0081  
                 __ptext13 02E5                   __ptext22 009D                   __ptext14 039D  
                 __ptext15 0517                   __ptext16 0404                   __ptext17 00E7  
                 __ptext18 008E                   __ptext19 00C7               deshacer@nume 007C  
                 _intachar 0243                   _spiWrite 006B               spiInit@sType 0073  
                 map@maxen 002F                   map@maxsa 0031                   map@minen 002E  
                 map@minsa 0030          spiInit@sClockIdle 0071                 _INTCONbits 000B  
         ___lwmod@dividend 0072           ??_spiReceiveWait 0070                deshacer@dec 0024  
              deshacer@uni 0023                  stringcode 0003         Lcd8_Write_String@a 0074  
       Lcd8_Write_String@i 0073                ??_portconfi 0074            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 0003                   stringtab 0003  
             ___aldiv@sign 0029  
